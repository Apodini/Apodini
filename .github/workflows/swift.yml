name: Build and Test

on:
  push:
    branches:
      - develop
      - release
  pull_request:
    branches:
      - develop
      - release

jobs:
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: maxim-lobanov/setup-xcode@v1.1
      with:
        xcode-version: latest
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-spm-cachev2-${{ hashFiles('**/Package.resolved') }}
    - name: Check Xcode version
      run: xcodebuild -version
    - name: Check Swift version
      run: swift --version
    - name: Build
      run: swift build --build-tests
    - name: Test
      run: swift test --enable-code-coverage
    - name: Convert coverage report
      run: xcrun llvm-cov export -format="lcov" .build/debug/ApodiniPackageTests.xctest/Contents/MacOS/ApodiniPackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
  linux:
    container:
      image: swift:${{ matrix.linux }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        linux: [bionic, xenial, focal]
    steps:
    - uses: actions/checkout@v2
    - name: Install libsqlite3
      run: apt-get update && apt-get install -y --no-install-recommends libsqlite3-dev
    - uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-${{matrix.linux}}-spm-cachev2-${{ hashFiles('**/Package.resolved') }}
    - name: Check Swift version
      run: swift --version
    - name: Build
      run: swift build --build-tests --enable-test-discovery
    - name: Test
      run: swift test --enable-test-discovery
