{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apodini uses "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/overview\/"},{"type":"text","text":" provide easy access to the database, including the creation of model types which represent data structures. These models are then used to perform create, read, update, and delete operations instead of writing raw queries."},{"type":"text","text":" "},{"type":"text","text":"ApodiniDatabase currently supports the default drivers supported by "},{"overridingTitleInlineContent":[{"type":"text","text":"Fluent"}],"isActive":true,"type":"reference","identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/overview\/","overridingTitle":"Fluent"},{"type":"text","text":": "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.postgresql.org"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.sqlite.org"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.mysql.com"},{"type":"text","text":", and "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.mongodb.com"},{"type":"text","text":"."}]},{"anchor":"Configuration","level":2,"type":"heading","text":"Configuration"},{"anchor":"Add-Target-Dependency","level":3,"type":"heading","text":"Add Target Dependency"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"ApodiniDatabase"},{"type":"text","text":" dependency to the target in "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":" file."}]},{"type":"codeListing","syntax":"swift","code":["targets: [","    .target(","        name: \"Your Target\",","        dependencies: [","            \/\/ ...","            .product(name: \"ApodiniDatabase\", package: \"Apodini\")","        ])","]‚"]},{"anchor":"Add-Database-Configuration","level":3,"type":"heading","text":"Add Database Configuration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"DatabaseConfiguration"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"configuration"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"WebService"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct ExampleWebService: WebService {","    var content: some Component {","        \/\/ ...","    }","    ","    var configuration: Configuration {","        ","        \/\/ ...","","        DatabaseConfiguration(.sqlite(.file(\".\/apodini-database.sqlite\")))","            ","            \/\/ ...","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apodini also supports another drivers: "},{"type":"codeVoice","code":".defaultMongoDB"},{"type":"text","text":", "},{"type":"codeVoice","code":".defaultPostgreSQL"},{"type":"text","text":", "},{"type":"codeVoice","code":".postgreSQL"},{"type":"text","text":", "},{"type":"codeVoice","code":".defaultMySQL"},{"type":"text","text":", and "},{"type":"codeVoice","code":".mySQL"},{"type":"text","text":"."}]},{"anchor":"Add-Fluent-Migrations","level":3,"type":"heading","text":"Add Fluent Migrations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apodini provides "},{"type":"codeVoice","code":".addMigrations(_:)"},{"type":"text","text":" function to add one or more "},{"type":"codeVoice","code":"Migrations"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct ExampleWebService: WebService {","    var content: some Component {","        ContactComponent()","    }","    ","    var configuration: Configuration {","        ","        \/\/ ...","","        DatabaseConfiguration(.sqlite(.file(\".\/apodini-database.sqlite\")))","            .addMigrations(ExampleMigration())","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Migration"},{"type":"text","text":" should conform to Fluent "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/migration\/"},{"type":"text","text":" protocol."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is required to prepare your object models beforehand. They should conform to Fluent "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/model\/"},{"type":"text","text":"."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Each object model should also conform to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Content"},{"type":"text","text":"."}]}],"type":"aside","name":"Important"},{"anchor":"Define-Components","level":3,"type":"heading","text":"Define Components"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component"},{"type":"text","text":" to define the route based on the input parameter as follows:"}]},{"type":"codeListing","syntax":"swift","code":["struct ContactComponent: Component {","    @PathParameter","    var contactId: Contact.IDValue","    ","    ","    var content: some Component {","        Group(\"contacts\") {","            ","            CreateContact()","                .operation(.create)","            ","            GetContacts()","            ","            Group($contactId) {","                ","                GetContact(contactId: $contactId)","                ","                UpdateContact(contactId: $contactId)","                    .operation(.update)","                ","                DeleteContact(contactId: $contactId)","                    .operation(.delete)","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this case, the "},{"type":"codeVoice","code":"contactId"},{"type":"text","text":" can be passed as a path in the URL request"}]},{"type":"codeListing","syntax":null,"code":["http:\/\/localhost\/contacts\/<contactId>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For every endpoint it is to be defined which "},{"type":"codeVoice","code":"operation"},{"type":"text","text":" is represented by the given endpoint."}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn more advance relationship retrieval: "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RetrieveRelationship"}]}],"type":"aside","name":"Tip"},{"anchor":"Query-Example","level":3,"type":"heading","text":"Query Example"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following shows a "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" to update a "},{"type":"codeVoice","code":"Contact"},{"type":"text","text":" instance in the database."}]},{"type":"codeListing","syntax":"swift","code":["import ApodiniDatabase","import Fluent","import Foundation","import NIO","","struct UpdateContact: Handler {","","    \/\/\/ SQLite Database as an environmental object","    @Environment(\\.database)","    var database: Database","    ","    \/\/\/ Identifier that specifies a unique `Contact`","    @Parameter","    var runId: Contact.IDValue","    ","    \/\/\/ The mediator that is passed in the HTTP body and containts the updated values of the `Contact`","    @Parameter(.http(.body))","    var runMediator: ContactMediator","    ","    \/\/\/ Error that is thrown if the specified `Contact` doens't exists in the database","    @Throws(.notFound, reason: \"The Contact could not be found\")","    var notFound: ApodiniError","    ","    \/**","    Update a specific `Contact`","    - Returns: The updated `Contact` object","    *\/","    func handle() throws -> EventLoopFuture<Contact> {","        Contact","            \/\/\/ Find specific `Contact` object","            .find(contactId, on: database)","            \/\/\/ Throw error if `Contact` couldn't be found","            .unwrap(orError: notFound)","            .flatMap { contact in","","                \/\/\/ Apply the mediator to the fetched `Contact` from the database","                contactMediator.apply(to: contact)","                ","                \/\/\/ Update the `Contact` in the database and return the updated object","                return run","                    .update(on: database)","                    .transform(to: contact)","            }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"runMediator"},{"type":"text","text":" uses a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Parameter"},{"type":"text","text":" with an HTTP mode option "},{"type":"codeVoice","code":".body"},{"type":"text","text":" to parse the value from HTTP body."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The function calls within "},{"type":"codeVoice","code":"handle()"},{"type":"text","text":" uses the SwiftNIO asynchronous operations with "},{"type":"reference","isActive":true,"identifier":"https:\/\/apple.github.io\/swift-nio\/docs\/current\/NIO\/Classes\/EventLoopFuture.html"},{"type":"text","text":" and Fluent’s "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/query\/"}]}],"type":"aside","name":"Important"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ApodiniError"},{"type":"text","text":" provides a structure to throw an error from "},{"type":"codeVoice","code":"Handlers"},{"type":"text","text":" and recieves treatment from the interface exporters."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/apodini\/databaseconnection"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/DatabaseConnection","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Connect Apodini project to a database system."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Database Connection","role":"collectionGroup","modules":[{"name":"Apodini"}]},"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini"]]},"seeAlsoSections":[{"title":"Ecosystem","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Authorization","doc:\/\/Apodini\/documentation\/Apodini\/PushNotifications","doc:\/\/Apodini\/documentation\/Apodini\/Jobs","doc:\/\/Apodini\/documentation\/Apodini\/Observe","doc:\/\/Apodini\/documentation\/Apodini\/OpenAPI"],"generated":true}],"references":{"doc://Apodini/documentation/Apodini/ApodiniError":{"role":"symbol","title":"ApodiniError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ApodiniError"}],"abstract":[{"type":"text","text":"An error that can be thrown from "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s and receives special treatment from compliant interface exporters."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ApodiniError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ApodiniError"}],"url":"\/documentation\/apodini\/apodinierror"},"https://docs.vapor.codes/4.0/fluent/model/":{"title":"Model","titleInlineContent":[{"type":"text","text":"Model"}],"type":"link","identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/model\/","url":"https:\/\/docs.vapor.codes\/4.0\/fluent\/model\/"},"https://docs.vapor.codes/4.0/fluent/migration/":{"title":"Migration","titleInlineContent":[{"type":"text","text":"Migration"}],"type":"link","identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/migration\/","url":"https:\/\/docs.vapor.codes\/4.0\/fluent\/migration\/"},"https://www.postgresql.org":{"title":"PostgreSQL","titleInlineContent":[{"type":"text","text":"PostgreSQL"}],"type":"link","identifier":"https:\/\/www.postgresql.org","url":"https:\/\/www.postgresql.org"},"https://www.sqlite.org":{"title":"SQLite","titleInlineContent":[{"type":"text","text":"SQLite"}],"type":"link","identifier":"https:\/\/www.sqlite.org","url":"https:\/\/www.sqlite.org"},"doc://Apodini/documentation/Apodini/PushNotifications":{"role":"collectionGroup","title":"Push Notifications","abstract":[{"type":"text","text":"A guide to use push notifications in Apodini."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/PushNotifications","kind":"article","type":"topic","url":"\/documentation\/apodini\/pushnotifications"},"doc://Apodini/documentation/Apodini/OpenAPI":{"role":"article","title":"OpenAPI Interface Exporter","abstract":[{"type":"text","text":"This document provides a short introduction to using the "},{"type":"codeVoice","code":"OpenAPIInterfaceExporter"},{"type":"text","text":", a static exporter for Apodini."},{"type":"text","text":" "},{"type":"text","text":"It can be used to expose an OpenAPI specification (version 3.0.3) for an exported RESTful API, as done by the "},{"type":"codeVoice","code":"RESTInterfaceExporter"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/OpenAPI","kind":"article","type":"topic","url":"\/documentation\/apodini\/openapi"},"doc://Apodini/documentation/Apodini/Content":{"role":"symbol","title":"Content","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Content"}],"abstract":[{"type":"text","text":"Types that can be returned from a "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"‘s "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" function should conform to "},{"type":"codeVoice","code":"Content"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" includes the conformance to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":". If the types implement the "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" requirements the type doesn’t need to provide additional"},{"type":"text","text":" "},{"type":"text","text":"implementation steps to conform to "},{"type":"codeVoice","code":"ResponseTransformable"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Content","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Content"}],"url":"\/documentation\/apodini\/content"},"doc://Apodini/documentation/Apodini/Observe":{"role":"collectionGroup","title":"Observe a web service","abstract":[{"type":"text","text":"Instrument an Apodini web service to make it observable."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Observe","kind":"article","type":"topic","url":"\/documentation\/apodini\/observe"},"doc://Apodini/documentation/Apodini/Jobs":{"role":"collectionGroup","title":"Jobs","abstract":[{"type":"text","text":"A guide to schedule repeating tasks in Apodini."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Jobs","kind":"article","type":"topic","url":"\/documentation\/apodini\/jobs"},"doc://Apodini/documentation/Apodini/RetrieveRelationship":{"role":"collectionGroup","title":"Retrieving Relationship Information","abstract":[{"type":"text","text":"This proposal describes how relationship information can be generated from the DSL, introduces some concepts"},{"type":"text","text":" "},{"type":"text","text":"to give hints for relationship retrieval and adds mechanisms to manually define hints."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RetrieveRelationship","kind":"article","type":"topic","url":"\/documentation\/apodini\/retrieverelationship"},"doc://Apodini/documentation/Apodini/Metadata":{"role":"collectionGroup","title":"Metadata","abstract":[{"type":"text","text":"Map requirements of your web service into the implementation."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Metadata","kind":"article","type":"topic","url":"\/documentation\/apodini\/metadata"},"doc://Apodini/documentation/Apodini/Component":{"role":"symbol","title":"Component","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Component"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" is the central building block of  Apodini. Each component handles a specific functionality of the Apodini web service."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Component"}],"url":"\/documentation\/apodini\/component"},"https://docs.vapor.codes/4.0/fluent/query/":{"title":"Query API","titleInlineContent":[{"type":"text","text":"Query API"}],"type":"link","identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/query\/","url":"https:\/\/docs.vapor.codes\/4.0\/fluent\/query\/"},"doc://Apodini/documentation/Apodini/Authorization":{"role":"collectionGroup","title":"Apodini Authorization","abstract":[{"type":"text","text":"Formulate Authorization Requirements using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Metadata"},{"type":"text","text":" system."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Authorization","kind":"article","type":"topic","url":"\/documentation\/apodini\/authorization"},"https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html":{"title":"EventLoopFuture","titleInlineContent":[{"type":"text","text":"EventLoopFuture"}],"type":"link","identifier":"https:\/\/apple.github.io\/swift-nio\/docs\/current\/NIO\/Classes\/EventLoopFuture.html","url":"https:\/\/apple.github.io\/swift-nio\/docs\/current\/NIO\/Classes\/EventLoopFuture.html"},"https://www.mysql.com":{"title":"MySQL","titleInlineContent":[{"type":"text","text":"MySQL"}],"type":"link","identifier":"https:\/\/www.mysql.com","url":"https:\/\/www.mysql.com"},"https://www.mongodb.com":{"title":"MongoDB","titleInlineContent":[{"type":"text","text":"MongoDB"}],"type":"link","identifier":"https:\/\/www.mongodb.com","url":"https:\/\/www.mongodb.com"},"https://docs.vapor.codes/4.0/fluent/overview/":{"title":"Fluent","titleInlineContent":[{"type":"text","text":"Fluent"}],"type":"link","identifier":"https:\/\/docs.vapor.codes\/4.0\/fluent\/overview\/","url":"https:\/\/docs.vapor.codes\/4.0\/fluent\/overview\/"},"doc://Apodini/documentation/Apodini/Parameter":{"role":"symbol","title":"Parameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" property wrapper can be used to express input in "},{"type":"codeVoice","code":"Components"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Parameter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/apodini\/parameter"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"}}}