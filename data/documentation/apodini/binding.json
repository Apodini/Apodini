{"seeAlsoSections":[{"title":"Binding","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Environment","doc:\/\/Apodini\/documentation\/Apodini\/Parameter","doc:\/\/Apodini\/documentation\/Apodini\/PathParameter","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/constant(_:)"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"title":"Binding","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:7Apodini7BindingV","modules":[{"name":"Apodini"}],"navigatorTitle":[{"kind":"identifier","text":"Binding"}]},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Property"},{"type":"text","text":" that can be used on "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s for better re-usability. Depending on"},{"type":"text","text":" "},{"type":"text","text":"the context the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" can be bound to a "},{"type":"codeVoice","code":"Binding.constant"},{"type":"text","text":", an "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or an "},{"type":"codeVoice","code":"@Environment"},{"type":"text","text":". The latter "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"s for the latter two are contained in their"},{"type":"text","text":" "},{"type":"codeVoice","code":"projectedValue"},{"type":"text","text":"s."}],"sections":[],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/Binding","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/DynamicProperty","doc:\/\/Apodini\/documentation\/Apodini\/PathComponent","doc:\/\/Apodini\/documentation\/Apodini\/Property","doc:\/\/Apodini\/s25ExpressibleByArrayLiteralP","doc:\/\/Apodini\/s27ExpressibleByBooleanLiteralP","doc:\/\/Apodini\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/Apodini\/s25ExpressibleByFloatLiteralP","doc:\/\/Apodini\/s27ExpressibleByIntegerLiteralP","doc:\/\/Apodini\/s23ExpressibleByNilLiteralP","doc:\/\/Apodini\/s32ExpressibleByStringInterpolationP","doc:\/\/Apodini\/s26ExpressibleByStringLiteralP","doc:\/\/Apodini\/s33ExpressibleByUnicodeScalarLiteralP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/AllAboutReuse"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Binding\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Binding\/asOptional","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/projectedValue","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/wrappedValue"]},{"title":"Type Methods","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Binding\/some(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Binding\/DynamicProperty-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByArrayLiteral-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByBooleanLiteral-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByFloatLiteral-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByNilLiteral-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByStringLiteral-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByUnicodeScalarLiteral-Implementations","doc:\/\/Apodini\/documentation\/Apodini\/Binding\/PathComponent-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/apodini\/binding"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://Apodini/documentation/Apodini/PathParameter":{"role":"symbol","title":"PathParameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathParameter"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"@PathComponent"},{"type":"text","text":" can be used in "},{"type":"codeVoice","code":"Component"},{"type":"text","text":"s to indicate that a part of a path is a parameter and can be read out in a "},{"type":"codeVoice","code":"Handler"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/PathParameter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathParameter"}],"url":"\/documentation\/apodini\/pathparameter"},"doc://Apodini/documentation/Apodini/Binding/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/expressiblebyextendedgraphemeclusterliteral-implementations"},"doc://Apodini/documentation/Apodini/Binding/some(_:)":{"role":"symbol","title":"some(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"some"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7Apodini7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Create an optional, always present "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" that always returns the given "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/some(_:)","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/binding\/some(_:)"},"doc://Apodini/documentation/Apodini/Binding":{"role":"symbol","title":"Binding","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Property"},{"type":"text","text":" that can be used on "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s for better re-usability. Depending on"},{"type":"text","text":" "},{"type":"text","text":"the context the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" can be bound to a "},{"type":"codeVoice","code":"Binding.constant"},{"type":"text","text":", an "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or an "},{"type":"codeVoice","code":"@Environment"},{"type":"text","text":". The latter "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"s for the latter two are contained in their"},{"type":"text","text":" "},{"type":"codeVoice","code":"projectedValue"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Binding"}],"url":"\/documentation\/apodini\/binding"},"doc://Apodini/documentation/Apodini/Binding/ExpressibleByNilLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByNilLiteral Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByNilLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/expressiblebynilliteral-implementations"},"doc://Apodini/documentation/Apodini/Component":{"role":"symbol","title":"Component","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Component"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" is the central building block of  Apodini. Each component handles a specific functionality of the Apodini web service."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Component"}],"url":"\/documentation\/apodini\/component"},"doc://Apodini/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/Apodini\/s25ExpressibleByArrayLiteralP"},"doc://Apodini/documentation/Apodini/Binding/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/binding\/wrappedvalue"},"doc://Apodini/documentation/Apodini/Binding/constant(_:)":{"role":"symbol","title":"constant(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"constant"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7Apodini7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" that always returns the given "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/constant(_:)","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/binding\/constant(_:)"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/s32ExpressibleByStringInterpolationP":{"type":"unresolvable","title":"Swift.ExpressibleByStringInterpolation","identifier":"doc:\/\/Apodini\/s32ExpressibleByStringInterpolationP"},"doc://Apodini/documentation/Apodini/Binding/ExpressibleByArrayLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByArrayLiteral Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByArrayLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/expressiblebyarrayliteral-implementations"},"doc://Apodini/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral","identifier":"doc:\/\/Apodini\/s43ExpressibleByExtendedGraphemeClusterLiteralP"},"doc://Apodini/s26ExpressibleByStringLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByStringLiteral","identifier":"doc:\/\/Apodini\/s26ExpressibleByStringLiteralP"},"doc://Apodini/documentation/Apodini/Property":{"role":"symbol","title":"Property","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Property"}],"abstract":[{"type":"text","text":"This protocol is implemented by all of Apodini’s property wrappers that are used access functionality or information on a handling "},{"type":"codeVoice","code":"Component"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Property","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Property"}],"url":"\/documentation\/apodini\/property"},"doc://Apodini/documentation/Apodini/Binding/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7Apodini7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Creates a binding by projecting the base value to an optional value."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/binding\/init(_:)"},"doc://Apodini/documentation/Apodini/Binding/PathComponent-Implementations":{"role":"collectionGroup","title":"PathComponent Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/PathComponent-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/pathcomponent-implementations"},"doc://Apodini/documentation/Apodini/Binding/ExpressibleByStringLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByStringLiteral Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByStringLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/expressiblebystringliteral-implementations"},"doc://Apodini/documentation/Apodini/PathComponent":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"PathComponent","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathComponent"}],"abstract":[{"type":"text","text":"A full path is built out of multiple PathComponents"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/PathComponent","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PathComponent"}],"url":"\/documentation\/apodini\/pathcomponent"},"doc://Apodini/s23ExpressibleByNilLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByNilLiteral","identifier":"doc:\/\/Apodini\/s23ExpressibleByNilLiteralP"},"doc://Apodini/s27ExpressibleByBooleanLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByBooleanLiteral","identifier":"doc:\/\/Apodini\/s27ExpressibleByBooleanLiteralP"},"doc://Apodini/documentation/Apodini/Binding/ExpressibleByIntegerLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByIntegerLiteral Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByIntegerLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/expressiblebyintegerliteral-implementations"},"doc://Apodini/documentation/Apodini/Environment":{"role":"symbol","title":"Environment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"abstract":[{"type":"text","text":"A property wrapper to inject pre-defined values  to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Environment","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Environment"}],"url":"\/documentation\/apodini\/environment"},"doc://Apodini/documentation/Apodini/Binding/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByUnicodeScalarLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/expressiblebyunicodescalarliteral-implementations"},"doc://Apodini/documentation/Apodini/Binding/DynamicProperty-Implementations":{"role":"collectionGroup","title":"DynamicProperty Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/DynamicProperty-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/dynamicproperty-implementations"},"doc://Apodini/documentation/Apodini/Binding/ExpressibleByFloatLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByFloatLiteral Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByFloatLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/expressiblebyfloatliteral-implementations"},"doc://Apodini/s33ExpressibleByUnicodeScalarLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByUnicodeScalarLiteral","identifier":"doc:\/\/Apodini\/s33ExpressibleByUnicodeScalarLiteralP"},"doc://Apodini/s25ExpressibleByFloatLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByFloatLiteral","identifier":"doc:\/\/Apodini\/s25ExpressibleByFloatLiteralP"},"doc://Apodini/documentation/Apodini/AllAboutReuse":{"role":"collectionGroup","title":"All About Reuse","abstract":[{"type":"text","text":"Despite its declarative nature, Apodini’s API is really flexible and enables you to build reusable components on many different levels."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/AllAboutReuse","kind":"article","type":"topic","url":"\/documentation\/apodini\/allaboutreuse"},"doc://Apodini/s27ExpressibleByIntegerLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByIntegerLiteral","identifier":"doc:\/\/Apodini\/s27ExpressibleByIntegerLiteralP"},"doc://Apodini/documentation/Apodini/Binding/ExpressibleByBooleanLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByBooleanLiteral Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/ExpressibleByBooleanLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/binding\/expressiblebybooleanliteral-implementations"},"doc://Apodini/documentation/Apodini/Parameter":{"role":"symbol","title":"Parameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" property wrapper can be used to express input in "},{"type":"codeVoice","code":"Components"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Parameter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/apodini\/parameter"},"doc://Apodini/documentation/Apodini/Binding/asOptional":{"role":"symbol","title":"asOptional","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"asOptional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7Apodini7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Creates a binding by projecting this binding’s value to an optional value."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/asOptional","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/binding\/asoptional"},"doc://Apodini/documentation/Apodini/DynamicProperty":{"role":"symbol","title":"DynamicProperty","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"abstract":[{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" allows for wrapping "},{"type":"codeVoice","code":"Property"},{"type":"text","text":"s while maintaining their functionality. By conforming a "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" to "},{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" "},{"type":"text","text":"you make this "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"’s properties discoverable to the Apodini runtime framework. This can be used to e.g. combine"},{"type":"text","text":" "},{"type":"text","text":"two property wrappers provided by the Apodini framework into one that merges their functionality"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DynamicProperty","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"url":"\/documentation\/apodini\/dynamicproperty"},"doc://Apodini/documentation/Apodini/Binding/projectedValue":{"role":"symbol","title":"projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7Apodini7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding\/projectedValue","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/binding\/projectedvalue"}}}