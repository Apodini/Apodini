{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The property wrapper "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" is the central interface for the developer to specify what input is required for their endpoint. "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" properties are injected with a value when a message from the client arrives and before a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":" is evaluated. The "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" has no setter."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For information on how a specific exporter represents an "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" in its respective protocol and how this can be customized, refer to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Parameter"},{"type":"text","text":"."}]},{"anchor":"Lifetime","level":2,"type":"heading","text":"Lifetime"},{"anchor":"Influence","level":3,"type":"heading","text":"Influence"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The presence of "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" properties on a "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" has no influence on the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":"’s lifetime, i.e. how long it is kept in memory after it has been initially accessed."}]},{"anchor":"Implementation-Details","level":3,"type":"heading","text":"Implementation-Details"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the exporter allows for multiple messages to arrive on one instance of this endpoint (connection), then subsequent messages may override the values held in "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" properties. The contents of an "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" may never be reset (except for when the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is destructed). In case the evaluation of a "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is triggered by another event than an incoming message, the "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" still holds the latest injected value."}]},{"anchor":"Control-Flow","level":2,"type":"heading","text":"Control Flow"},{"anchor":"Influence","level":3,"type":"heading","text":"Influence"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":"s do not emit their own events. The Apodini framework makes sure the arrival of a new incoming message is treated as an atomic event. That is:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s are not evaluated once for each "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" that is injected with a value, but once for each incoming message."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Other events causing the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" to be evaluated cannot be processed in parallel."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Another "},{"type":"codeVoice","code":"Property"},{"type":"text","text":"’s public members cannot change while a "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is evaluated except by the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" function."}]}]}]},{"anchor":"Implementation-Details","level":3,"type":"heading","text":"Implementation-Details"},{"anchor":"Request-Response","level":4,"type":"heading","text":"Request-Response"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once a request arrives for an endpoint, all "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":"s living on the initial "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" are injected using the exporter’s decoder. Afterwards the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is evaluated."}]},{"anchor":"Client-Side-Stream","level":4,"type":"heading","text":"Client-Side Stream"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once a request arrives for an endpoint, all "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":"s living on the initial "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" are injected using the exporter’s decoder. Afterwards the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is evaluated. This process is repeated for every incoming message until the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is destructed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once a value was injected into an "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" it is never deleted. However, the exporter can allow subsequent messages to overwrite an "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":". If the injection of one "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" results in an error and therefore the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is not evaluated, the previous successfully injected "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":"s have to be reset to their respective state before the erroneous client-message arrived."}]},{"anchor":"Service-Side-Stream","level":4,"type":"heading","text":"Service-Side Stream"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Refer to the Request-Response pattern."}]},{"anchor":"Bidirectional-Stream","level":4,"type":"heading","text":"Bidirectional Stream"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Refer to the Client-Side Stream pattern."}]},{"anchor":"Future-Aspects","level":4,"type":"heading","text":"Future Aspects"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If in future, "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s can delegate work to other "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s, the process of evaluating the "},{"type":"codeVoice","code":"Handler`` becomes more complicated: If the "},{"type":"text","text":"Handler"},{"type":"codeVoice","code":"evaluates to another"},{"type":"text","text":"Handler"},{"type":"codeVoice","code":", the process of injecting "},{"type":"text","text":"@Parameter"},{"type":"codeVoice","code":"s and then evaluating the "},{"type":"text","text":"Handler"},{"type":"codeVoice","code":" is recursively repeated with the child-"},{"type":"text","text":"Handler"},{"type":"codeVoice","code":"until the"},{"type":"text","text":"Handler"},{"type":"codeVoice","code":"evaluates to a"},{"type":"text","text":"handle()"},{"type":"codeVoice","code":"function. Then this"},{"type":"text","text":"handle()"},{"type":"codeVoice","code":"function is executed and the"},{"type":"text","text":"Handler` is destructed."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/apodini\/meaningofparameter"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/MeaningOfParameter","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Specifying input for endpoints with Parameter property wrapper in Apodini."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Parameter","role":"article","modules":[{"name":"Apodini"}]},"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/CommunicationPattern","doc:\/\/Apodini\/documentation\/Apodini\/Tooling"]]},"seeAlsoSections":[{"title":"Tooling","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/MeaningOfState","doc:\/\/Apodini\/documentation\/Apodini\/MeaningOfObservedObject","doc:\/\/Apodini\/documentation\/Apodini\/MeaningOfEnvironment"],"generated":true}],"references":{"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/documentation/Apodini/MeaningOfState":{"role":"article","title":"State","abstract":[{"type":"text","text":"Description of State property wrapper and its usage in Apodini."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/MeaningOfState","kind":"article","type":"topic","url":"\/documentation\/apodini\/meaningofstate"},"doc://Apodini/documentation/Apodini/Handler":{"role":"symbol","title":"Handler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Handler"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" which defines an endpoint and can handle requests."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Handler"}],"url":"\/documentation\/apodini\/handler"},"doc://Apodini/documentation/Apodini/MeaningOfEnvironment":{"role":"collectionGroup","title":"Environment","abstract":[{"type":"text","text":"Description of Environment property wrapper and its usage in Apodini."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/MeaningOfEnvironment","kind":"article","type":"topic","url":"\/documentation\/apodini\/meaningofenvironment"},"doc://Apodini/documentation/Apodini/MeaningOfObservedObject":{"role":"article","title":"ObservedObject","abstract":[{"type":"text","text":"Description of ObservedObject property wrapper and its usage in Apodini."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/MeaningOfObservedObject","kind":"article","type":"topic","url":"\/documentation\/apodini\/meaningofobservedobject"},"doc://Apodini/documentation/Apodini/CommunicationPattern":{"role":"collectionGroup","title":"Communication Pattern","abstract":[{"type":"text","text":"Communication patterns and their usage in different client-service protocols."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/CommunicationPattern","kind":"article","type":"topic","url":"\/documentation\/apodini\/communicationpattern"},"doc://Apodini/documentation/Apodini/Parameter":{"role":"symbol","title":"Parameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" property wrapper can be used to express input in "},{"type":"codeVoice","code":"Components"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Parameter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/apodini\/parameter"},"doc://Apodini/documentation/Apodini/Tooling":{"role":"collectionGroup","title":"Tooling","abstract":[{"type":"text","text":"Description service structure for endpoints."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Tooling","kind":"article","type":"topic","url":"\/documentation\/apodini\/tooling"}}}