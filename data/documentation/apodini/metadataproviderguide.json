{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following guide, we want to highlight all the necessary steps to create your own Metadata Definition."},{"type":"text","text":" "},{"type":"text","text":"The guide will demonstrate each step using the example of a "},{"type":"codeVoice","code":"Description"},{"type":"text","text":" Metadata, which should be available"},{"type":"text","text":" "},{"type":"text","text":"on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":"s and the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService"},{"type":"text","text":" to define a textual description of the respective Component,"},{"type":"text","text":" "},{"type":"text","text":"which could be used by a tool generating WebService Documentation (like the "},{"type":"codeVoice","code":"OpenAPIExporter"},{"type":"text","text":")."}]},{"anchor":"Creating-the-ContextKey","level":2,"type":"heading","text":"Creating the ContextKey"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Metadata DSL system currently relies on the usage of "},{"type":"codeVoice","code":"ContextKey"},{"type":"text","text":"s to store and identify"},{"type":"text","text":" "},{"type":"text","text":"Metadata with the respective Component. Therefore, the first step is to define"},{"type":"text","text":" "},{"type":"text","text":"a Type conforming to "},{"type":"codeVoice","code":"ContextKey"},{"type":"text","text":" or "},{"type":"codeVoice","code":"OptionalContextKey"},{"type":"text","text":". Withing that type you need to define"},{"type":"text","text":" "},{"type":"text","text":"the Type of the stored value, a potential default value and optionally logic on how to reduce"},{"type":"text","text":" "},{"type":"text","text":"multiple Metadata Declarations."},{"type":"text","text":" "},{"type":"text","text":"The Type itself is used as an identifier to retrieve the stored Metadata Declaration."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For our example of a "},{"type":"codeVoice","code":"Description"},{"type":"text","text":" Metadata we can define a "},{"type":"codeVoice","code":"OptionalContextKey"},{"type":"text","text":" like the following:"}]},{"type":"codeListing","syntax":"swift","code":["struct DescriptionMetadataContextKey: OptionalContextKey {","    typealias Value = String","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The above declaration uses the standard implementation of the "},{"type":"codeVoice","code":"reduce"},{"type":"text","text":" method, therefore"},{"type":"text","text":" "},{"type":"text","text":"relying on the default hierarchy when encountering multiple declarations of the same Metadata."},{"type":"text","text":" "},{"type":"text","text":"Overriding the "},{"type":"codeVoice","code":"reduce"},{"type":"text","text":" method can be especially useful when working with numbers, to get the maximum or minimum,"},{"type":"text","text":" "},{"type":"text","text":"or appending values when working with array type ContextKeys."}]},{"anchor":"Creating-the-Metadata-Definition","level":2,"type":"heading","text":"Creating the Metadata Definition"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next up we need to deal with creating the actual Metadata Definition."},{"type":"text","text":" "},{"type":"text","text":"When creating Metadata Definitions, the "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" protocol is the fundamental build block"},{"type":"text","text":" "},{"type":"text","text":"you will work with. Apodini provides several "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" protocols, depending on "},{"type":"strong","inlineContent":[{"type":"text","text":"where"}]},{"type":"text","text":" "},{"type":"text","text":"you want your Metadata to be applicable. The following ones are available:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataDefinition"},{"type":"text","text":": By conforming to this protocol, you make your Metadata Definition available"},{"type":"text","text":" "},{"type":"text","text":"inside the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" Metadata Declaration Blocks."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataDefinition"},{"type":"text","text":": By conforming to this protocol, you make your Metadata Definition available"},{"type":"text","text":" "},{"type":"text","text":"inside the "},{"type":"codeVoice","code":"WebService"},{"type":"text","text":" Metadata Declaration Blocks."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataDefinition"},{"type":"text","text":": By conforming to this protocol, you make your Metadata Definition available"},{"type":"text","text":" "},{"type":"text","text":"inside the "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" Metadata Declaration Blocks, including those of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":"s."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ContentMetadataDefinition"},{"type":"text","text":": By conforming to this protocol, you make your Metadata Definition available"},{"type":"text","text":" "},{"type":"text","text":"inside the "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" Metadata Declaration Blocks."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataDefinition"},{"type":"text","text":": By conforming to this protocol, you make your Metadata Definition available"},{"type":"text","text":" "},{"type":"text","text":"inside the "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" (and only "},{"type":"codeVoice","code":"Component"},{"type":"text","text":") Metadata Declaration Blocks."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Your Metadata Definition can conform to any combination of the above protocols, to make it available"},{"type":"text","text":" "},{"type":"text","text":"in the respective declaration blocks. Note that the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataDefinition"},{"type":"text","text":" is already"},{"type":"text","text":" "},{"type":"text","text":"a combination of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataDefinition"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataDefinition"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataDefinition"},{"type":"text","text":" "},{"type":"text","text":"protocols."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In our example, we want our Description Metadata to be declarable on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":"s and the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"We do this by conforming to both the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataDefinition"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataDefinition"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"As required by the "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" we will need to define our "},{"type":"codeVoice","code":"ContextKey"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"Key"},{"type":"text","text":" typealias,"},{"type":"text","text":" "},{"type":"text","text":"and implement the "},{"type":"codeVoice","code":"value"},{"type":"text","text":" property holding the stored Metadata."}]},{"type":"codeListing","syntax":"swift","code":["struct DescriptionMetadata: HandlerMetadataDefinition, WebServiceMetadataDefinition {","    typealias Key = DescriptionMetadataContextKey","","    var value: String \/\/ type equals to Key.Value","","    init(_ description: String) {","        self.value = description","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that your Type name can and should be pretty descriptive. This will not be the name which is later used"},{"type":"text","text":" "},{"type":"text","text":"for the Metadata Declaration. The Metadata DSL proposes the concept of the Metadata Namespaces described in the next"},{"type":"text","text":" "},{"type":"text","text":"chapter which allow for more flexible naming, incorporating more natural language for the DSL."}]},{"anchor":"Adding-the-Definition-to-the-appropriate-Metadata-Namespace","level":2,"type":"heading","text":"Adding the Definition to the appropriate Metadata Namespace"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Metadata Namespaces are a way of providing more descriptive and natural naming while reducing"},{"type":"text","text":" "},{"type":"text","text":"potential naming conflicts."},{"type":"text","text":" "},{"type":"text","text":"This is done by defining a typealias in the respective Namespace."},{"type":"text","text":" "},{"type":"text","text":"Each type of Metadata Definition (e.g. a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataDefinition"},{"type":"text","text":") has its own namespace"},{"type":"text","text":" "},{"type":"text","text":"(e.g. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataNamespace"},{"type":"text","text":"), allowing to reuse the same name in different namespaces"},{"type":"text","text":" "},{"type":"text","text":"for similar Metadata (e.g. there might be differing "},{"type":"codeVoice","code":"Description"},{"type":"text","text":" Metadata for Component descriptions"},{"type":"text","text":" "},{"type":"text","text":"and Handler descriptions)."}]},{"anchor":"Standard-Metadata-Namespaces","level":3,"type":"heading","text":"Standard Metadata Namespaces"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For each available MetadataDefinition, Apodini defines the respective Metadata Namespace:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataNamespace"},{"type":"text","text":": Namespace available in the metadata declaration blocks of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataBlock"},{"type":"text","text":" protocol."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataNamespace"},{"type":"text","text":": Namespace available in the metadata declaration blocks of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataBlock"},{"type":"text","text":" protocol."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataNamespace"},{"type":"text","text":": Namespace available in the metadata declaration blocks of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService"},{"type":"text","text":" protocols, as well as in the corresponding Metadata Block protocols:"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataBlock"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataBlock"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataBlock"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataBlock"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ContentMetadataNamespace"},{"type":"text","text":": Namespace available in the metadata declaration blocks of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Content"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"ContentMetadataBlock"},{"type":"text","text":" protocol."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataNamespace"},{"type":"text","text":": This namespace should be used for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataDefinition"},{"type":"text","text":"s, as names defined"},{"type":"text","text":" "},{"type":"text","text":"here have certain precedence over names defined in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataNamespace"},{"type":"text","text":" in places where it matters."},{"type":"text","text":" "},{"type":"text","text":"Though, be aware that names defined here are still available in the metadata declaration blocks of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataBlock"},{"type":"text","text":" protocols."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For our "},{"type":"codeVoice","code":"DescriptionMetadata"},{"type":"text","text":" we want to use the name "},{"type":"codeVoice","code":"Description"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Our metadata conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataDefinition"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataDefinition"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"therefore we need to declare our typealias in both the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataNamespace"},{"type":"text","text":" and the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataNamespace"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["extension HandlerMetadataNamespace {","    typealias Description = DescriptionMetadata","}","","extension WebServiceMetadataNamespace {","    typealias Description = DescriptionMetadata","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A user could now use the "},{"type":"codeVoice","code":"Description"},{"type":"text","text":" Metadata as follows:"}]},{"type":"codeListing","syntax":"swift","code":["struct  TestHandler: Handler {","    func handle() -> String {","        \"Hello World!\"","    }","","    var metadata: Metadata {","        Description(\"The TestHandler serves as a Hello World Endpoint!\")","        \/\/ ...","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also provide convenience Metadata modifies to, e.g., a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":" using an extension that typically looks like follows:"}]},{"type":"codeListing","syntax":"swift","code":["extension Handler {","    public func description(_ description: String) -> HandlerMetadataModifier<Self> {","        HandlerMetadataModifier(modifies: self, with: DescriptionMetadata(description))","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This allows adding or overriding the Metadata from outside of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":" when composing your web service interface in the Apodini DSL:"}]},{"type":"codeListing","syntax":"swift","code":["TestHandler()","    .description(\"The TestHandler serves as a Hello World Endpoint! 👋\")"]},{"anchor":"Typed-Metadata-Namespaces","level":3,"type":"heading","text":"Typed Metadata Namespaces"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In certain cases it might be useful or mandatory to retrieve the generic type of the component the Metadata"},{"type":"text","text":" "},{"type":"text","text":"is declared on. As this information is not available with the regular Metadata Namespaces, Apodini provides the"},{"type":"text","text":" "},{"type":"text","text":"following typed Metadata Namespaces, which allows to access the Type the Metadata is used on."},{"type":"text","text":" "},{"type":"text","text":"The following Typed Metadata Namespaces are available:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedHandlerMetadataNamespace"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedWebServiceMetadataNamespace"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedComponentMetadataNamespace"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedContentMetadataNamespace"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You may note that there is no "},{"type":"codeVoice","code":"TypeComponentOnlyMetadataNamespace"},{"type":"text","text":" as it would be equivalent to"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedComponentMetadataNamespace"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We now assume a modified Handler Description Modifier which expects the Handler type as the first generic type"},{"type":"text","text":" "},{"type":"text","text":"(e.g. to incorporate the type information into the description):"}]},{"type":"codeListing","syntax":"swift","code":["struct HandlerDescriptionMetadata<H: Handler>: HandlerMetadataDescription {","    \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now we can define the name as follows:"}]},{"type":"codeListing","syntax":"swift","code":["extension TypedHandlerMetadataNamespace {","    typealias Description = HandlerDescriptionMetadata<Self>","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method allows to transparently insert the generic type"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Be aware, that our "},{"type":"codeVoice","code":"Description"},{"type":"text","text":" Metadata is now only available inside Metadata Declaration Blocks of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":" "},{"type":"text","text":"protocol. To ensure the greatest flexibility you should additionally add a typealias to the regular"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataNamespace"},{"type":"text","text":" so that your Metadata is still available in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataBlock"},{"type":"text","text":"s."}]},{"type":"codeListing","syntax":"swift","code":["extension HandlerMetadataNamespace {","    typealias Description<H: Handler> = HandlerDescriptionMetadata<H>","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This allows the user to still use your Metadata inside "},{"type":"codeVoice","code":"HandlerMetadataBlock"},{"type":"text","text":" though with the additional"},{"type":"text","text":" "},{"type":"text","text":"overhead of manually specifying the generic type."}]},{"anchor":"Define-a-Restricted-Metadata-Block","level":2,"type":"heading","text":"Define a Restricted Metadata Block"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, the user can use the "},{"type":"codeVoice","code":"Block"},{"type":"text","text":" metadata (e.g. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataNamespace\/Block"},{"type":"text","text":") to group arbitrary (according to the respective Metadata Declaration Block it is used on) Metadata for better overview."},{"type":"text","text":" "},{"type":"codeVoice","code":"Block"},{"type":"text","text":" serves as a general purpose way of grouping Metadata Declarations."},{"type":"text","text":" "},{"type":"text","text":"Restricted Metadata Blocks are now a way to provide custom Metadata Blocks which only allow for a specific"},{"type":"text","text":" "},{"type":"text","text":"Metadata Declaration (and nesting the same Restricted Metadata Blocks)."},{"type":"text","text":" "},{"type":"text","text":"Apodini provides the following different "},{"type":"codeVoice","code":"RestrictedMetadataBlock"},{"type":"text","text":"s:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RestrictedHandlerMetadataBlock"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RestrictedWebServiceMetadataBlock"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RestrictedComponentMetadataBlock"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"RestrictedContentMetadataBlock"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RestrictedComponentOnlyMetadataBlock"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Creating such a Restricted Metadata Block is only a matter of declaring another"},{"type":"text","text":" "},{"type":"text","text":"extension for the appropriate Namespace. For our original "},{"type":"codeVoice","code":"DescriptionMetadata"},{"type":"text","text":" "},{"type":"text","text":"example we would do the following:"}]},{"type":"codeListing","syntax":"swift","code":["extension HandlerMetadataNamespace {","    typealias Descriptions = RestrictedHandlerMetadataBlock<DescriptionMetadata>","}","","extension WebServiceMetadataNamespace {","    typealias Descriptions = RestrictedWebServiceMetadataBlock<DescriptionMetadata>","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A user can now use our "},{"type":"codeVoice","code":"Descriptions"},{"type":"text","text":" Block to group all occurrences of our "},{"type":"codeVoice","code":"Description"},{"type":"text","text":" "},{"type":"text","text":"Metadata (which doesn’t really make sense in this example, but works for demonstration purposes)."}]},{"type":"codeListing","syntax":"swift","code":["struct  TestHandler: Handler {","    func handle() -> String {","        \"Hello World!\"","    }","","    var metadata: Metadata {","        \/\/ ...","        Descriptions {","            Description(\"The TestHandler serves as a Hello World Endpoint!\")","            \/\/ ...","        }","    }","}"]},{"anchor":"Special-purpose-Metadata","level":2,"type":"heading","text":"Special purpose Metadata"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Metadata API provides some easy to use interfaces making the creation of common types of Metadata easier."},{"type":"text","text":" "},{"type":"text","text":"This section highlights the most important cases."}]},{"anchor":"41-Metadata-Definition-providing-a-DelegatingHandlerInitializer","level":3,"type":"heading","text":"4.1. Metadata Definition providing a DelegatingHandlerInitializer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A given Metadata Declaration might want to boostrap a "},{"type":"codeVoice","code":"DelegatingHandler"},{"type":"text","text":" "},{"type":"text","text":"(see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerDelegation"},{"type":"text","text":") via the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerContextKey"},{"type":"text","text":" "},{"type":"text","text":"for the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" it is declared on (this includes "},{"type":"codeVoice","code":"HandlerMetadataDefinition"},{"type":"text","text":"s but also "},{"type":"codeVoice","code":"ComponentMetadataDefinition"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"declared on all sorts of "},{"type":"codeVoice","code":"Component"},{"type":"text","text":"s)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The API differentiates between two cases, (a) a "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" which adds the "},{"type":"codeVoice","code":"DelegatingHandler"},{"type":"text","text":" in addition"},{"type":"text","text":" "},{"type":"text","text":"to its "},{"type":"emphasis","inlineContent":[{"type":"text","text":"standard"}]},{"type":"text","text":" Metadata value identified via the provided "},{"type":"codeVoice","code":"MetadataDefinition.Key"},{"type":"text","text":" or (b)"},{"type":"text","text":" "},{"type":"text","text":"where the MetadataDefinition only contributes a "},{"type":"codeVoice","code":"DelegatingHandler"},{"type":"text","text":" and therefore the "},{"type":"codeVoice","code":"MetadataDefinition.Key"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"equal to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerContextKey"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For both of the below-illustrated case, we assume the existence of a "},{"type":"codeVoice","code":"FooBarDelegatingHandlerInitializer"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"See the article on "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerDelegation"},{"type":"text","text":" for how"},{"type":"text","text":" "},{"type":"text","text":"to create "},{"type":"codeVoice","code":"DelegatingHandlers"},{"type":"text","text":" and a appropriate "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both cases are illustrated below."}]},{"anchor":"Providing-a-DelegatingHandler-as-an-additional-Metadata","level":4,"type":"heading","text":"Providing a `DelegatingHandler` as an additional Metadata"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We assume the existence of the "},{"type":"codeVoice","code":"FooBar"},{"type":"text","text":" Metadata with the existing string based "},{"type":"codeVoice","code":"FooBarMetadataContextKey"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["struct FooBarMetadata: HandlerMetadataDefinition {","    typealias Key = FooBarMetadataContextKey","","    var value: String","","    init(foo: String) {","        self.value = foo","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you can declare conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DefinitionWithDelegatingHandler"},{"type":"text","text":" protocol on the "},{"type":"codeVoice","code":"FooBarMetadata"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This will require us to implement the additional "},{"type":"codeVoice","code":"var initializer: DelegatingHandlerContextKey.Entry { get }"},{"type":"text","text":" property providing"},{"type":"text","text":" "},{"type":"text","text":"an instance of the discussed "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct FooBarMetadata: HandlerMetadataDefinition, DefinitionWithDelegatingHandler {","    typealias Key = FooBarMetadataContextKey","","    var value: String","","    var initializer: DelegatingHandlerContextKey.Value = [.init(FooBarDelegatingHandlerInitializer())]","","    init(foo: String) {","        self.value = foo","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s it. When the Metadata is parsed, it will now add the "},{"type":"codeVoice","code":"value"},{"type":"text","text":" for the "},{"type":"codeVoice","code":"FooBarMetadataContextKey"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":" for the "},{"type":"codeVoice","code":"DelegatingHandlerContextKey"},{"type":"text","text":" (both added with the "},{"type":"codeVoice","code":"MetadataDefinition.scope"},{"type":"text","text":")."}]},{"anchor":"Providing-a-DelegatingHandler-as-the-primary-Metadata","level":4,"type":"heading","text":"Providing a DelegatingHandler as the primary Metadata"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When creating a "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" which solely contributes a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer"},{"type":"text","text":", in addition"},{"type":"text","text":" "},{"type":"text","text":"to declaring conformance to the appropriate "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" protocol"},{"type":"text","text":" "},{"type":"text","text":"you need to declare conformance to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DefinitionWithDelegatingHandlerKey"},{"type":"text","text":" protocol."},{"type":"text","text":" "},{"type":"text","text":"This will require us to implement the additional "},{"type":"codeVoice","code":"var initializer: DelegatingHandlerContextKey.Entry { get }"},{"type":"text","text":" property providing"},{"type":"text","text":" "},{"type":"text","text":"an instance of the discussed "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct FooBarMetadata: HandlerMetadataDefinition, DefinitionWithDelegatingHandlerKey {","    var initializer: Key.Value = [.init(FooBarDelegatingHandlerInitializer())]","","    init() {","        \/\/ ...","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/apodini\/metadataproviderguide"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/MetadataProviderGuide","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A guide on how to use the Metadata system from the perspective of a Metadata Provider."}],"kind":"article","metadata":{"modules":[{"name":"Apodini"}],"role":"collectionGroup","title":"Metadata Provider Guide"},"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/Metadata"]]},"topicSections":[{"title":"Web Service Elements","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Component","doc:\/\/Apodini\/documentation\/Apodini\/Handler","doc:\/\/Apodini\/documentation\/Apodini\/WebService","doc:\/\/Apodini\/documentation\/Apodini\/Content"]},{"title":"Metadata Definitions","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataDefinition","doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataDefinition","doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataDefinition","doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataDefinition"]},{"title":"Metadata Namespaces","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataNamespace","doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataNamespace","doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataNamespace","doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataNamespace"]},{"title":"Typed Metadata Namespaces","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/TypedComponentMetadataNamespace","doc:\/\/Apodini\/documentation\/Apodini\/TypedHandlerMetadataNamespace","doc:\/\/Apodini\/documentation\/Apodini\/TypedWebServiceMetadataNamespace","doc:\/\/Apodini\/documentation\/Apodini\/TypedContentMetadataNamespace"]},{"title":"Metadata Blocks","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataBlock","doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataBlock","doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataBlock","doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataBlock"]},{"title":"Restricted Metadata Blocks","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/RestrictedComponentMetadataBlock","doc:\/\/Apodini\/documentation\/Apodini\/RestrictedComponentOnlyMetadataBlock","doc:\/\/Apodini\/documentation\/Apodini\/RestrictedHandlerMetadataBlock","doc:\/\/Apodini\/documentation\/Apodini\/RestrictedWebServiceMetadataBlock"]},{"title":"Enforcing Metadata","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/HandlerDelegation","doc:\/\/Apodini\/documentation\/Apodini\/BuildingExporters"]}],"references":{"doc://Apodini/documentation/Apodini/RestrictedComponentOnlyMetadataBlock":{"role":"symbol","title":"RestrictedComponentOnlyMetadataBlock","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RestrictedComponentOnlyMetadataBlock"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"RestrictedComponentOnlyMetadataBlock"},{"type":"text","text":" protocol represents "},{"type":"codeVoice","code":"RestrictedMetadataBlock"},{"type":"text","text":"s which can only contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnyComponentOnlyMetadata"},{"type":"text","text":" and itself can only be placed in "},{"type":"codeVoice","code":"AnyComponentOnlyMetadata"},{"type":"text","text":" Declaration Blocks."},{"type":"text","text":" "},{"type":"text","text":"Use the generic type "},{"type":"codeVoice","code":"RestrictedContent"},{"type":"text","text":" to define which "},{"type":"codeVoice","code":"AnyComponentOnlyMetadata"},{"type":"text","text":" is allowed in the Block."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RestrictedComponentOnlyMetadataBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RestrictedComponentOnlyMetadataBlock"}],"url":"\/documentation\/apodini\/restrictedcomponentonlymetadatablock"},"doc://Apodini/documentation/Apodini/HandlerMetadataNamespace/Block":{"role":"symbol","title":"HandlerMetadataNamespace.Block","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Block"}],"abstract":[{"type":"text","text":"Name definition for the "},{"type":"codeVoice","code":"StandardHandlerMetadataBlock"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataNamespace\/Block","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Block"}],"url":"\/documentation\/apodini\/handlermetadatanamespace\/block"},"doc://Apodini/documentation/Apodini/ComponentOnlyMetadataNamespace":{"role":"symbol","title":"ComponentOnlyMetadataNamespace","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentOnlyMetadataNamespace"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ComponentOnlyMetadataNamespace"},{"type":"text","text":" can be used to define an appropriate"},{"type":"text","text":" "},{"type":"text","text":"Name for your "},{"type":"codeVoice","code":"ComponentOnlyMetadataDefinition"},{"type":"text","text":" in a way that avoids Name collisions"},{"type":"text","text":" "},{"type":"text","text":"on the global Scope."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataNamespace","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComponentOnlyMetadataNamespace"}],"url":"\/documentation\/apodini\/componentonlymetadatanamespace"},"doc://Apodini/documentation/Apodini/HandlerMetadataBlock":{"role":"symbol","title":"HandlerMetadataBlock","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandlerMetadataBlock"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"HandlerMetadataBlock"},{"type":"text","text":" protocol represents "},{"type":"codeVoice","code":"AnyMetadataBlock"},{"type":"text","text":"s which can only contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnyHandlerMetadata"},{"type":"text","text":" and itself can only be placed in "},{"type":"codeVoice","code":"AnyHandlerMetadata"},{"type":"text","text":" Declaration Blocks."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandlerMetadataBlock"}],"url":"\/documentation\/apodini\/handlermetadatablock"},"doc://Apodini/documentation/Apodini/HandlerDelegation":{"role":"collectionGroup","title":"Delegating Handlers","abstract":[{"type":"text","text":"Defining reusable and assertive "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerDelegation","kind":"article","type":"topic","url":"\/documentation\/apodini\/handlerdelegation"},"doc://Apodini/documentation/Apodini/Handler":{"role":"symbol","title":"Handler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Handler"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" which defines an endpoint and can handle requests."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Handler"}],"url":"\/documentation\/apodini\/handler"},"doc://Apodini/documentation/Apodini/RestrictedHandlerMetadataBlock":{"role":"symbol","title":"RestrictedHandlerMetadataBlock","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RestrictedHandlerMetadataBlock"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"RestrictedHandlerMetadataBlock"},{"type":"text","text":" protocol represents "},{"type":"codeVoice","code":"RestrictedMetadataBlock"},{"type":"text","text":"s which can only contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnyHandlerMetadata"},{"type":"text","text":" and itself can only be placed in "},{"type":"codeVoice","code":"AnyHandlerMetadata"},{"type":"text","text":" Declaration Blocks."},{"type":"text","text":" "},{"type":"text","text":"Use the generic type "},{"type":"codeVoice","code":"RestrictedContent"},{"type":"text","text":" to define which "},{"type":"codeVoice","code":"AnyHandlerMetadata"},{"type":"text","text":" is allowed in the Block."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RestrictedHandlerMetadataBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RestrictedHandlerMetadataBlock"}],"url":"\/documentation\/apodini\/restrictedhandlermetadatablock"},"doc://Apodini/documentation/Apodini/WebService":{"role":"symbol","title":"WebService","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebService"}],"abstract":[{"type":"text","text":"Each Apodini program consists of a "},{"type":"codeVoice","code":"WebService"},{"type":"text","text":"component that is used to describe the Web API of the Web Service"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WebService"}],"url":"\/documentation\/apodini\/webservice"},"doc://Apodini/documentation/Apodini/RestrictedWebServiceMetadataBlock":{"role":"symbol","title":"RestrictedWebServiceMetadataBlock","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RestrictedWebServiceMetadataBlock"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"RestrictedWebServiceMetadataBlock"},{"type":"text","text":" protocol represents "},{"type":"codeVoice","code":"RestrictedMetadataBlock"},{"type":"text","text":"s which can only contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnyWebServiceMetadata"},{"type":"text","text":" and itself can only be placed in "},{"type":"codeVoice","code":"AnyWebServiceMetadata"},{"type":"text","text":" Declaration Blocks."},{"type":"text","text":" "},{"type":"text","text":"Use the generic type "},{"type":"codeVoice","code":"RestrictedContent"},{"type":"text","text":" to define which "},{"type":"codeVoice","code":"AnyWebServiceMetadata"},{"type":"text","text":" is allowed in the Block."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RestrictedWebServiceMetadataBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RestrictedWebServiceMetadataBlock"}],"url":"\/documentation\/apodini\/restrictedwebservicemetadatablock"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/documentation/Apodini/DelegatingHandlerInitializer":{"role":"symbol","title":"DelegatingHandlerInitializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DelegatingHandlerInitializer"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"DelegatingHandlerInitializer"},{"type":"text","text":" is used to dynamically stack "},{"type":"strong","inlineContent":[{"type":"text","text":"delegating"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Component"},{"type":"text","text":"s. The "},{"type":"codeVoice","code":"DelegatingHandlerInitializer"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"instance"},{"type":"text","text":" method is called once for"},{"type":"text","text":" "},{"type":"text","text":"every related endpoint."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DelegatingHandlerInitializer"}],"url":"\/documentation\/apodini\/delegatinghandlerinitializer"},"doc://Apodini/documentation/Apodini/HandlerMetadataNamespace":{"role":"symbol","title":"HandlerMetadataNamespace","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandlerMetadataNamespace"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"HandlerMetadataNamespace"},{"type":"text","text":" can be used to define an appropriate"},{"type":"text","text":" "},{"type":"text","text":"Name for your "},{"type":"codeVoice","code":"HandlerMetadataDefinition"},{"type":"text","text":" in a way that avoids Name collisions"},{"type":"text","text":" "},{"type":"text","text":"on the global Scope."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataNamespace","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandlerMetadataNamespace"}],"url":"\/documentation\/apodini\/handlermetadatanamespace"},"doc://Apodini/documentation/Apodini/Metadata":{"role":"collectionGroup","title":"Metadata","abstract":[{"type":"text","text":"Map requirements of your web service into the implementation."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Metadata","kind":"article","type":"topic","url":"\/documentation\/apodini\/metadata"},"doc://Apodini/documentation/Apodini/DefinitionWithDelegatingHandlerKey":{"role":"symbol","title":"DefinitionWithDelegatingHandlerKey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefinitionWithDelegatingHandlerKey"}],"abstract":[{"type":"text","text":"Some "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" might declare conformance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DefinitionWithDelegatingHandlerKey"},{"type":"text","text":" "},{"type":"text","text":"if it wishes (and only wishes; meaning doesn’t expose any other Context values) to bootstrap an"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer"},{"type":"text","text":" for the respective "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService"},{"type":"text","text":" and\/or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Therefore this protocol sets the "},{"type":"codeVoice","code":"MetadataDefinition\/Key"},{"type":"text","text":" associated type."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DefinitionWithDelegatingHandlerKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefinitionWithDelegatingHandlerKey"}],"url":"\/documentation\/apodini\/definitionwithdelegatinghandlerkey"},"doc://Apodini/documentation/Apodini/ComponentOnlyMetadataBlock":{"role":"symbol","title":"ComponentOnlyMetadataBlock","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentOnlyMetadataBlock"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ComponentOnlyMetadataBlock"},{"type":"text","text":" protocol represents "},{"type":"codeVoice","code":"AnyMetadataBlock"},{"type":"text","text":"s which can only contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnyComponentOnlyMetadata"},{"type":"text","text":" and itself can only be placed in "},{"type":"codeVoice","code":"AnyComponentOnlyMetadata"},{"type":"text","text":" Declaration Blocks."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComponentOnlyMetadataBlock"}],"url":"\/documentation\/apodini\/componentonlymetadatablock"},"doc://Apodini/documentation/Apodini/WebServiceMetadataDefinition":{"role":"symbol","title":"WebServiceMetadataDefinition","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebServiceMetadataDefinition"}],"abstract":[{"type":"text","text":"See "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" for an explanation on what a Metadata Definition is"},{"type":"text","text":" "},{"type":"text","text":"and a recommendation for a naming convention."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WebServiceMetadataDefinition"}],"url":"\/documentation\/apodini\/webservicemetadatadefinition"},"doc://Apodini/documentation/Apodini/WebServiceMetadataBlock":{"role":"symbol","title":"WebServiceMetadataBlock","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebServiceMetadataBlock"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"WebServiceMetadataBlock"},{"type":"text","text":" protocol represents "},{"type":"codeVoice","code":"AnyMetadataBlock"},{"type":"text","text":"s which can only contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnyWebServiceMetadata"},{"type":"text","text":" and itself can only be placed in "},{"type":"codeVoice","code":"AnyWebServiceMetadata"},{"type":"text","text":" Declaration Blocks."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WebServiceMetadataBlock"}],"url":"\/documentation\/apodini\/webservicemetadatablock"},"doc://Apodini/documentation/Apodini/ComponentMetadataBlock":{"role":"symbol","title":"ComponentMetadataBlock","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentMetadataBlock"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ComponentMetadataBlock"},{"type":"text","text":" protocol represents "},{"type":"codeVoice","code":"AnyMetadataBlock"},{"type":"text","text":"s which can only contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnyComponentMetadata"},{"type":"text","text":" and itself can only be placed in "},{"type":"codeVoice","code":"AnyComponentMetadata"},{"type":"text","text":" Declaration Blocks."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComponentMetadataBlock"}],"url":"\/documentation\/apodini\/componentmetadatablock"},"doc://Apodini/documentation/Apodini/Component":{"role":"symbol","title":"Component","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Component"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" is the central building block of  Apodini. Each component handles a specific functionality of the Apodini web service."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Component"}],"url":"\/documentation\/apodini\/component"},"doc://Apodini/documentation/Apodini/RestrictedComponentMetadataBlock":{"role":"symbol","title":"RestrictedComponentMetadataBlock","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RestrictedComponentMetadataBlock"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"RestrictedComponentMetadataBlock"},{"type":"text","text":" protocol represents "},{"type":"codeVoice","code":"RestrictedMetadataBlock"},{"type":"text","text":"s which can only contain"},{"type":"text","text":" "},{"type":"codeVoice","code":"AnyComponentMetadata"},{"type":"text","text":" and itself can only be placed in "},{"type":"codeVoice","code":"AnyComponentMetadata"},{"type":"text","text":" Declaration Blocks."},{"type":"text","text":" "},{"type":"text","text":"Use the generic type "},{"type":"codeVoice","code":"RestrictedContent"},{"type":"text","text":" to define which "},{"type":"codeVoice","code":"AnyComponentMetadata"},{"type":"text","text":" is allowed in the Block."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/RestrictedComponentMetadataBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RestrictedComponentMetadataBlock"}],"url":"\/documentation\/apodini\/restrictedcomponentmetadatablock"},"doc://Apodini/documentation/Apodini/DelegatingHandlerContextKey":{"role":"symbol","title":"DelegatingHandlerContextKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DelegatingHandlerContextKey"}],"abstract":[{"type":"text","text":"Key to store Delegating Handler Initializer"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerContextKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DelegatingHandlerContextKey"}],"url":"\/documentation\/apodini\/delegatinghandlercontextkey"},"doc://Apodini/documentation/Apodini/WebServiceMetadataNamespace":{"role":"symbol","title":"WebServiceMetadataNamespace","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebServiceMetadataNamespace"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"WebServiceMetadataNamespace"},{"type":"text","text":" can be used to define an appropriate"},{"type":"text","text":" "},{"type":"text","text":"Name for your "},{"type":"codeVoice","code":"WebServiceMetadataDefinition"},{"type":"text","text":" in a way that avoids Name collisions"},{"type":"text","text":" "},{"type":"text","text":"on the global Scope."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebServiceMetadataNamespace","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WebServiceMetadataNamespace"}],"url":"\/documentation\/apodini\/webservicemetadatanamespace"},"doc://Apodini/documentation/Apodini/ComponentMetadataDefinition":{"role":"symbol","title":"ComponentMetadataDefinition","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentMetadataDefinition"}],"abstract":[{"type":"text","text":"See "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" for an explanation on what a Metadata Definition is"},{"type":"text","text":" "},{"type":"text","text":"and a recommendation for a naming convention."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComponentMetadataDefinition"}],"url":"\/documentation\/apodini\/componentmetadatadefinition"},"doc://Apodini/documentation/Apodini/InterfaceExporter":{"role":"symbol","title":"InterfaceExporter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"InterfaceExporter"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/InterfaceExporter"},{"type":"text","text":" is a type which requires access to the web service’s structure and"},{"type":"text","text":" "},{"type":"text","text":"internals."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/InterfaceExporter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InterfaceExporter"}],"url":"\/documentation\/apodini\/interfaceexporter"},"doc://Apodini/documentation/Apodini/HandlerMetadataDefinition":{"role":"symbol","title":"HandlerMetadataDefinition","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HandlerMetadataDefinition"}],"abstract":[{"type":"text","text":"See "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" for an explanation on what a Metadata Definition is"},{"type":"text","text":" "},{"type":"text","text":"and a recommendation for a naming convention."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerMetadataDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HandlerMetadataDefinition"}],"url":"\/documentation\/apodini\/handlermetadatadefinition"},"doc://Apodini/documentation/Apodini/Content":{"role":"symbol","title":"Content","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Content"}],"abstract":[{"type":"text","text":"Types that can be returned from a "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"‘s "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" function should conform to "},{"type":"codeVoice","code":"Content"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" includes the conformance to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":". If the types implement the "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" requirements the type doesn’t need to provide additional"},{"type":"text","text":" "},{"type":"text","text":"implementation steps to conform to "},{"type":"codeVoice","code":"ResponseTransformable"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Content","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Content"}],"url":"\/documentation\/apodini\/content"},"doc://Apodini/documentation/Apodini/TypedContentMetadataNamespace":{"role":"symbol","title":"TypedContentMetadataNamespace","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedContentMetadataNamespace"}],"abstract":[{"type":"text","text":"As the "},{"type":"codeVoice","code":"ContentMetadataNamespace"},{"type":"text","text":" is accessible from "},{"type":"codeVoice","code":"ContentMetadataBlock"},{"type":"text","text":"s,"},{"type":"text","text":" "},{"type":"text","text":"there is no way to know the type of the "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" the Metadata will be used on"},{"type":"text","text":" "},{"type":"text","text":"(as "},{"type":"codeVoice","code":"MetadataBlock"},{"type":"text","text":"s decouple Metadata Declaration from the actual Content declared with that Metadata)."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedContentMetadataNamespace","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedContentMetadataNamespace"}],"url":"\/documentation\/apodini\/typedcontentmetadatanamespace"},"doc://Apodini/documentation/Apodini/TypedHandlerMetadataNamespace":{"role":"symbol","title":"TypedHandlerMetadataNamespace","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedHandlerMetadataNamespace"}],"abstract":[{"type":"text","text":"As the "},{"type":"codeVoice","code":"HandlerMetadataNamespace"},{"type":"text","text":" is accessible from "},{"type":"codeVoice","code":"HandlerMetadataBlock"},{"type":"text","text":"s,"},{"type":"text","text":" "},{"type":"text","text":"there is no way to know the type of the "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":" the Metadata will be used on"},{"type":"text","text":" "},{"type":"text","text":"(as "},{"type":"codeVoice","code":"MetadataBlock"},{"type":"text","text":"s decouple Metadata Declaration from the actual Component declared with that Metadata)."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedHandlerMetadataNamespace","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedHandlerMetadataNamespace"}],"url":"\/documentation\/apodini\/typedhandlermetadatanamespace"},"doc://Apodini/documentation/Apodini/DefinitionWithDelegatingHandler":{"role":"symbol","title":"DefinitionWithDelegatingHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefinitionWithDelegatingHandler"}],"abstract":[{"type":"text","text":"Some "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" might declare conformance to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DefinitionWithDelegatingHandler"},{"type":"text","text":" "},{"type":"text","text":"if it wishes to bootstrap an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer"},{"type":"text","text":" for the respective "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/WebService"},{"type":"text","text":" and\/or "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Handler"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This protocol shall be used if the Initializer is supplied in addition to the "},{"type":"codeVoice","code":"OptionalContextKey"},{"type":"text","text":" provided"},{"type":"text","text":" "},{"type":"text","text":"by the "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" solely provides a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer"},{"type":"text","text":", use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DefinitionWithDelegatingHandlerKey"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DefinitionWithDelegatingHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefinitionWithDelegatingHandler"}],"url":"\/documentation\/apodini\/definitionwithdelegatinghandler"},"doc://Apodini/documentation/Apodini/ComponentMetadataNamespace":{"role":"symbol","title":"ComponentMetadataNamespace","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentMetadataNamespace"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ComponentMetadataNamespace"},{"type":"text","text":" can be used to define an appropriate"},{"type":"text","text":" "},{"type":"text","text":"Name for your "},{"type":"codeVoice","code":"ComponentMetadataDefinition"},{"type":"text","text":" in a way that avoids Name collisions"},{"type":"text","text":" "},{"type":"text","text":"on the global Scope."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentMetadataNamespace","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComponentMetadataNamespace"}],"url":"\/documentation\/apodini\/componentmetadatanamespace"},"doc://Apodini/documentation/Apodini/TypedComponentMetadataNamespace":{"role":"symbol","title":"TypedComponentMetadataNamespace","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedComponentMetadataNamespace"}],"abstract":[{"type":"text","text":"As the "},{"type":"codeVoice","code":"ComponentMetadataNamespace"},{"type":"text","text":" is accessible from "},{"type":"codeVoice","code":"ComponentMetadataBlock"},{"type":"text","text":"s,"},{"type":"text","text":" "},{"type":"text","text":"there is no way to know the type of the "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" the Metadata will be used on"},{"type":"text","text":" "},{"type":"text","text":"(as "},{"type":"codeVoice","code":"MetadataBlock"},{"type":"text","text":"s decouple Metadata Declaration from the actual Component declared with that Metadata)."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedComponentMetadataNamespace","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedComponentMetadataNamespace"}],"url":"\/documentation\/apodini\/typedcomponentmetadatanamespace"},"doc://Apodini/documentation/Apodini/TypedWebServiceMetadataNamespace":{"role":"symbol","title":"TypedWebServiceMetadataNamespace","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedWebServiceMetadataNamespace"}],"abstract":[{"type":"text","text":"As the "},{"type":"codeVoice","code":"WebServiceMetadataNamespace"},{"type":"text","text":" is accessible from "},{"type":"codeVoice","code":"WebServiceMetadataBlock"},{"type":"text","text":"s,"},{"type":"text","text":" "},{"type":"text","text":"there is no way to know the type of the "},{"type":"codeVoice","code":"WebService"},{"type":"text","text":" the Metadata will be used on"},{"type":"text","text":" "},{"type":"text","text":"(as "},{"type":"codeVoice","code":"MetadataBlock"},{"type":"text","text":"s decouple Metadata Declaration from the actual Component declared with that Metadata)."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedWebServiceMetadataNamespace","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedWebServiceMetadataNamespace"}],"url":"\/documentation\/apodini\/typedwebservicemetadatanamespace"},"doc://Apodini/documentation/Apodini/BuildingExporters":{"role":"collectionGroup","title":"Building Exporters","abstract":[{"type":"text","text":"Writing a web service with Apodini is easy - as long as there are "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/InterfaceExporter"},{"type":"text","text":"s suitable for your purposes. If that is not the case, you might need to adapt one, or build a new one."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/BuildingExporters","kind":"article","type":"topic","url":"\/documentation\/apodini\/buildingexporters"},"doc://Apodini/documentation/Apodini/ComponentOnlyMetadataDefinition":{"role":"symbol","title":"ComponentOnlyMetadataDefinition","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ComponentOnlyMetadataDefinition"}],"abstract":[{"type":"text","text":"See "},{"type":"codeVoice","code":"MetadataDefinition"},{"type":"text","text":" for an explanation on what a Metadata Definition is"},{"type":"text","text":" "},{"type":"text","text":"and a recommendation for a naming convention."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ComponentOnlyMetadataDefinition","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ComponentOnlyMetadataDefinition"}],"url":"\/documentation\/apodini\/componentonlymetadatadefinition"}}}