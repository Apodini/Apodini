{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Request-Response is the simplest pattern. A simple hello world could look like this:"}]},{"type":"codeListing","syntax":"swift","code":["struct Greeter: Handler {","    @Parameter var name: String?","","    func handle() -> String {","        \"Hello, \\(name ?? World)!\"","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The above code does return "},{"type":"codeVoice","code":"String"},{"type":"text","text":" instead of an "},{"type":"codeVoice","code":"Response<String>"},{"type":"text","text":". The following would result in the exact same behavior:"}]},{"type":"codeListing","syntax":"swift","code":["struct Greeter: Handler {","    @Parameter var name: String?","","    func handle() -> Response<String> {","        .final(\"Hello, \\(name ?? World)!\")","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Of course for more advanced features (e.g. usage of database), the "},{"type":"codeVoice","code":"handle"},{"type":"text","text":" could also return an "},{"type":"codeVoice","code":"EventLoopFuture<String>"},{"type":"text","text":" or "},{"type":"codeVoice","code":"EventLoopFuture<Response<String>>"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/apodini\/requestresponse"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/RequestResponse","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Usage of Request and Response pattern."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Request-Response","role":"article","modules":[{"name":"Apodini"}]},"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/CommunicationPattern"]]},"seeAlsoSections":[{"title":"Pattern Implementation","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/PatternImplementation","doc:\/\/Apodini\/documentation\/Apodini\/ClientSideStream","doc:\/\/Apodini\/documentation\/Apodini\/ServiceSideStream","doc:\/\/Apodini\/documentation\/Apodini\/BidirectionalStream"],"generated":true}],"references":{"doc://Apodini/documentation/Apodini/ServiceSideStream":{"role":"article","title":"Service-Side Stream","abstract":[{"type":"text","text":"Provide a code example of service-side stream."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ServiceSideStream","kind":"article","type":"topic","url":"\/documentation\/apodini\/servicesidestream"},"doc://Apodini/documentation/Apodini/BidirectionalStream":{"role":"collectionGroup","title":"Bidirectional Stream","abstract":[{"type":"text","text":"Provide a code example of bidirectional streams."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/BidirectionalStream","kind":"article","type":"topic","url":"\/documentation\/apodini\/bidirectionalstream"},"doc://Apodini/documentation/Apodini/ClientSideStream":{"role":"article","title":"Client-Side Stream","abstract":[{"type":"text","text":"Provide an implementation of a client-side stream."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ClientSideStream","kind":"article","type":"topic","url":"\/documentation\/apodini\/clientsidestream"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/documentation/Apodini/CommunicationPattern":{"role":"collectionGroup","title":"Communication Pattern","abstract":[{"type":"text","text":"Communication patterns and their usage in different client-service protocols."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/CommunicationPattern","kind":"article","type":"topic","url":"\/documentation\/apodini\/communicationpattern"},"doc://Apodini/documentation/Apodini/PatternImplementation":{"role":"article","title":"Pattern Implementation","abstract":[{"type":"text","text":"Implemented communication patterns."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/PatternImplementation","kind":"article","type":"topic","url":"\/documentation\/apodini\/patternimplementation"}}}