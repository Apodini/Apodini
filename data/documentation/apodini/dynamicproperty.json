{"seeAlsoSections":[{"title":"DynamicProperty","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Property","doc:\/\/Apodini\/documentation\/Apodini\/Properties","doc:\/\/Apodini\/documentation\/Apodini\/TypedProperties"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"title":"DynamicProperty","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:7Apodini15DynamicPropertyP","modules":[{"name":"Apodini"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}]},"abstract":[{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" allows for wrapping "},{"type":"codeVoice","code":"Property"},{"type":"text","text":"s while maintaining their functionality. By conforming a "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" to "},{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" "},{"type":"text","text":"you make this "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"’s properties discoverable to the Apodini runtime framework. This can be used to e.g. combine"},{"type":"text","text":" "},{"type":"text","text":"two property wrappers provided by the Apodini framework into one that merges their functionality"}],"sections":[],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/DynamicProperty","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Property"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Binding","doc:\/\/Apodini\/documentation\/Apodini\/EnvironmentObject"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/AllAboutReuse"],["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/Observe"],["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/StatefulHandlers"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/DynamicProperty\/namingStrategy(_:)-5rml4"]}],"variants":[{"paths":["\/documentation\/apodini\/dynamicproperty"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Property","preciseIdentifier":"s:7Apodini8PropertyP","text":"Property"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Only structs can be a "},{"type":"codeVoice","code":"DynamicProperty"}]}],"type":"aside","name":"Warning"}]}],"references":{"doc://Apodini/documentation/Apodini/Observe":{"role":"collectionGroup","title":"Observe a web service","abstract":[{"type":"text","text":"Instrument an Apodini web service to make it observable."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Observe","kind":"article","type":"topic","url":"\/documentation\/apodini\/observe"},"doc://Apodini/documentation/Apodini/TypedProperties":{"role":"symbol","title":"TypedProperties","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TypedProperties"}],"abstract":[{"type":"text","text":"A typed version of an "},{"type":"codeVoice","code":"@Properties"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/TypedProperties","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TypedProperties"}],"url":"\/documentation\/apodini\/typedproperties"},"doc://Apodini/documentation/Apodini/StatefulHandlers":{"role":"collectionGroup","title":"Stateful Handlers","abstract":[{"type":"text","text":"Usually endpoints only handle one request and answer with one response. However, in certain cases, this is not enough. Apodini sets no restrictions on this."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/StatefulHandlers","kind":"article","type":"topic","url":"\/documentation\/apodini\/statefulhandlers"},"doc://Apodini/documentation/Apodini/Property":{"role":"symbol","title":"Property","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Property"}],"abstract":[{"type":"text","text":"This protocol is implemented by all of Apodini’s property wrappers that are used access functionality or information on a handling "},{"type":"codeVoice","code":"Component"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Property","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Property"}],"url":"\/documentation\/apodini\/property"},"doc://Apodini/documentation/Apodini/DynamicProperty":{"role":"symbol","title":"DynamicProperty","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"abstract":[{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" allows for wrapping "},{"type":"codeVoice","code":"Property"},{"type":"text","text":"s while maintaining their functionality. By conforming a "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" to "},{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" "},{"type":"text","text":"you make this "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"’s properties discoverable to the Apodini runtime framework. This can be used to e.g. combine"},{"type":"text","text":" "},{"type":"text","text":"two property wrappers provided by the Apodini framework into one that merges their functionality"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DynamicProperty","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"url":"\/documentation\/apodini\/dynamicproperty"},"doc://Apodini/documentation/Apodini/Properties":{"role":"symbol","title":"Properties","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Properties"}],"abstract":[{"type":"text","text":"Properties provides same functionality as "},{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":", but for elements that are only known"},{"type":"text","text":" "},{"type":"text","text":"at statup and not compile-time. That is, "},{"type":"codeVoice","code":"Properties"},{"type":"text","text":" stores named elements and makes the ones"},{"type":"text","text":" "},{"type":"text","text":"conforming to "},{"type":"codeVoice","code":"Property"},{"type":"text","text":" discoverable to the Apodini runtime framework."},{"type":"text","text":" "},{"type":"codeVoice","code":"Properties"},{"type":"text","text":" can be used to e.g. delay the decision, which "},{"type":"codeVoice","code":"Parameter"},{"type":"text","text":"s are exported to startup-time."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Properties","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Properties"}],"url":"\/documentation\/apodini\/properties"},"doc://Apodini/documentation/Apodini/Component":{"role":"symbol","title":"Component","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Component"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" is the central building block of  Apodini. Each component handles a specific functionality of the Apodini web service."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Component"}],"url":"\/documentation\/apodini\/component"},"doc://Apodini/documentation/Apodini/EnvironmentObject":{"role":"symbol","title":"EnvironmentObject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EnvironmentObject"}],"abstract":[{"type":"text","text":"A property wrapper to inject pre-defined values  to a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Component"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/EnvironmentObject","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EnvironmentObject"}],"url":"\/documentation\/apodini\/environmentobject"},"doc://Apodini/documentation/Apodini/AllAboutReuse":{"role":"collectionGroup","title":"All About Reuse","abstract":[{"type":"text","text":"Despite its declarative nature, Apodini’s API is really flexible and enables you to build reusable components on many different levels."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/AllAboutReuse","kind":"article","type":"topic","url":"\/documentation\/apodini\/allaboutreuse"},"doc://Apodini/documentation/Apodini/Binding":{"role":"symbol","title":"Binding","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Property"},{"type":"text","text":" that can be used on "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s for better re-usability. Depending on"},{"type":"text","text":" "},{"type":"text","text":"the context the "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" can be bound to a "},{"type":"codeVoice","code":"Binding.constant"},{"type":"text","text":", an "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or an "},{"type":"codeVoice","code":"@Environment"},{"type":"text","text":". The latter "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":"s for the latter two are contained in their"},{"type":"text","text":" "},{"type":"codeVoice","code":"projectedValue"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Binding","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Binding"}],"url":"\/documentation\/apodini\/binding"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/documentation/Apodini/DynamicProperty/namingStrategy(_:)-5rml4":{"defaultImplementations":1,"role":"symbol","title":"namingStrategy(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"namingStrategy"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"namingStrategy"},{"type":"text","text":" is called when the framework decides to interact with one of"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":"’s properties. By default it assumes the label of this property to be the"},{"type":"text","text":" "},{"type":"text","text":"desired name of the property."},{"type":"text","text":" "},{"type":"text","text":"This behavior can be changed by overriding the "},{"type":"codeVoice","code":"namingStrategy"},{"type":"text","text":". E.g. to expose an internal"},{"type":"text","text":" "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":" using the name that was given to the wrapping "},{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" the"},{"type":"text","text":" "},{"type":"codeVoice","code":"namingStrategy"},{"type":"text","text":" would be to return "},{"type":"codeVoice","code":"names[names.count-2]"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DynamicProperty\/namingStrategy(_:)-5rml4","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/apodini\/dynamicproperty\/namingstrategy(_:)-5rml4"}}}