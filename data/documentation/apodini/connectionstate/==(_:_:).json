{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ConnectionState","preciseIdentifier":"s:7Apodini15ConnectionStateO","text":"ConnectionState"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ConnectionState","preciseIdentifier":"s:7Apodini15ConnectionStateO","text":"ConnectionState"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The reason this exists is in order to deprecate it. Ideally, this enum would not conform to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":", and we’d require all"},{"type":"text","text":" "},{"type":"text","text":"comparisons be done using switch statements, but that is impossible since enums (regardless of whether or not they have raw values),"},{"type":"text","text":" "},{"type":"text","text":"will always get a compiler-synthesized "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" implementation."},{"type":"text","text":" "},{"type":"text","text":"Why do we want to deprecate this function? The issue here is that we want handlers to correctly handle all possible connection states."},{"type":"text","text":" "},{"type":"text","text":"If a handler simply uses a "},{"type":"codeVoice","code":"if connection.state == .end {} else {}"},{"type":"text","text":" check, it’d miss "},{"type":"codeVoice","code":"close"},{"type":"text","text":" states, which would result"},{"type":"text","text":" "},{"type":"text","text":"in the client not receiving the handler response. (The same also applies the other way around, i.e. a handler only checking for "},{"type":"codeVoice","code":"state == .close"},{"type":"text","text":" "},{"type":"text","text":"and missing "},{"type":"codeVoice","code":"end"},{"type":"text","text":" states."},{"type":"text","text":" "},{"type":"text","text":"Requiring the handler to use a switch statement, on the other hand, means that (unless the handler uses a default case, which it shouldn’t be doing anyway),"},{"type":"text","text":" "},{"type":"text","text":"all possible connection states will be explicitly checked for in the handler, and responded to accordingly."}]}],"type":"aside","name":"Note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/apodini\/connectionstate\/==(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/ConnectionState\/==(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ConnectionState"},{"type":"text","text":" equality comparison function. Not recommended. Use a switch statement instead."}],"kind":"symbol","metadata":{"role":"symbol","title":"==(_:_:)","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ConnectionState","preciseIdentifier":"s:7Apodini15ConnectionStateO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ConnectionState","preciseIdentifier":"s:7Apodini15ConnectionStateO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"op","externalID":"s:7Apodini15ConnectionStateO2eeoiySbAC_ACtFZ","modules":[{"name":"Apodini"}],"platforms":[]},"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/StatefulHandlers","doc:\/\/Apodini\/documentation\/Apodini\/ConnectionState"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use a switch statement instead!"}]}],"references":{"doc://Apodini/documentation/Apodini/StatefulHandlers":{"role":"collectionGroup","title":"Stateful Handlers","abstract":[{"type":"text","text":"Usually endpoints only handle one request and answer with one response. However, in certain cases, this is not enough. Apodini sets no restrictions on this."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/StatefulHandlers","kind":"article","type":"topic","url":"\/documentation\/apodini\/statefulhandlers"},"doc://Apodini/documentation/Apodini/ConnectionState":{"role":"symbol","title":"ConnectionState","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConnectionState"}],"abstract":[{"type":"text","text":"Represents the state of a connection to the client."},{"type":"text","text":" "},{"type":"text","text":"For non-client-streaming requests,"},{"type":"text","text":" "},{"type":"text","text":"the default state should be "},{"type":"codeVoice","code":".end"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ConnectionState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConnectionState"}],"url":"\/documentation\/apodini\/connectionstate"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/documentation/Apodini/ConnectionState/==(_:_:)":{"role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ConnectionState","preciseIdentifier":"s:7Apodini15ConnectionStateO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ConnectionState","preciseIdentifier":"s:7Apodini15ConnectionStateO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ConnectionState"},{"type":"text","text":" equality comparison function. Not recommended. Use a switch statement instead."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ConnectionState\/==(_:_:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/apodini\/connectionstate\/==(_:_:)"}}}