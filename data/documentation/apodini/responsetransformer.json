{"seeAlsoSections":[{"title":"DelegationModifier","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/DelegationModifier","doc:\/\/Apodini\/documentation\/Apodini\/Guard","doc:\/\/Apodini\/documentation\/Apodini\/Delegate","doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseTransformer"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/apodini\/responsetransformer"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/ResponseTransformer","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ResponseTransformer"},{"type":"text","text":" transforms a "},{"type":"codeVoice","code":"response"},{"type":"text","text":" of the type "},{"type":"codeVoice","code":"InputContent"},{"type":"text","text":" to a instance conforming to "},{"type":"codeVoice","code":"Content"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"An "},{"type":"codeVoice","code":"ResponseTransformer"},{"type":"text","text":" is able to map "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" types without the need to deal with an "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" type  of the previous "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It only maps in the "},{"type":"codeVoice","code":".send"},{"type":"text","text":",  "},{"type":"codeVoice","code":".finish"},{"type":"text","text":" and "},{"type":"codeVoice","code":".automatic"},{"type":"text","text":" cases."},{"type":"text","text":" "},{"type":"text","text":"If the previous Handler or ResponseTransformer returned an "},{"type":"codeVoice","code":"Response.end"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Response.nothing"},{"type":"text","text":" it is not called and will not map anything."},{"type":"text","text":" "},{"type":"text","text":"Both types ("},{"type":"codeVoice","code":"InputContent"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Content"},{"type":"text","text":") have to conform to "},{"type":"codeVoice","code":"Encodable"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseTransformer"}],"title":"ResponseTransformer","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:7Apodini19ResponseTransformerP","modules":[{"name":"Apodini"}],"navigatorTitle":[{"kind":"identifier","text":"ResponseTransformer"}]},"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/AllAboutReuse"],["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/HandlerDelegation"],["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/Metadata","doc:\/\/Apodini\/documentation\/Apodini\/MetadataProviderGuide","doc:\/\/Apodini\/documentation\/Apodini\/HandlerDelegation"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/ResponseTransformer\/Content","doc:\/\/Apodini\/documentation\/Apodini\/ResponseTransformer\/InputContent"]},{"title":"Instance Methods","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/ResponseTransformer\/transform(content:)"]}],"references":{"doc://Apodini/documentation/Apodini/ResponseTransformer/transform(content:)":{"role":"symbol","title":"transform(content:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"transform"},{"kind":"text","text":"("},{"kind":"externalParam","text":"content"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InputContent"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Content"}],"abstract":[{"type":"text","text":"Transforms a "},{"type":"codeVoice","code":"response"},{"type":"text","text":" of the type "},{"type":"codeVoice","code":"ResponseTransformable"},{"type":"text","text":" to a instance conforming to "},{"type":"codeVoice","code":"TransformedContent"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Both types ("},{"type":"codeVoice","code":"ResponseTransformable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"TransformedContent"},{"type":"text","text":") have to conform to "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ResponseTransformer\/transform(content:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/apodini\/responsetransformer\/transform(content:)"},"doc://Apodini/documentation/Apodini/Metadata":{"role":"collectionGroup","title":"Metadata","abstract":[{"type":"text","text":"Map requirements of your web service into the implementation."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Metadata","kind":"article","type":"topic","url":"\/documentation\/apodini\/metadata"},"doc://Apodini/documentation/Apodini/ResponseTransformer/InputContent":{"role":"symbol","title":"InputContent","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"InputContent"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"}],"abstract":[{"type":"text","text":"The type that should be transformed"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ResponseTransformer\/InputContent","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/apodini\/responsetransformer\/inputcontent"},"doc://Apodini/documentation/Apodini/ResponseTransformer":{"role":"symbol","title":"ResponseTransformer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ResponseTransformer"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ResponseTransformer"},{"type":"text","text":" transforms a "},{"type":"codeVoice","code":"response"},{"type":"text","text":" of the type "},{"type":"codeVoice","code":"InputContent"},{"type":"text","text":" to a instance conforming to "},{"type":"codeVoice","code":"Content"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"An "},{"type":"codeVoice","code":"ResponseTransformer"},{"type":"text","text":" is able to map "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" types without the need to deal with an "},{"type":"codeVoice","code":"Response"},{"type":"text","text":" type  of the previous "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It only maps in the "},{"type":"codeVoice","code":".send"},{"type":"text","text":",  "},{"type":"codeVoice","code":".finish"},{"type":"text","text":" and "},{"type":"codeVoice","code":".automatic"},{"type":"text","text":" cases."},{"type":"text","text":" "},{"type":"text","text":"If the previous Handler or ResponseTransformer returned an "},{"type":"codeVoice","code":"Response.end"},{"type":"text","text":" or "},{"type":"codeVoice","code":"Response.nothing"},{"type":"text","text":" it is not called and will not map anything."},{"type":"text","text":" "},{"type":"text","text":"Both types ("},{"type":"codeVoice","code":"InputContent"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Content"},{"type":"text","text":") have to conform to "},{"type":"codeVoice","code":"Encodable"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ResponseTransformer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ResponseTransformer"}],"url":"\/documentation\/apodini\/responsetransformer"},"doc://Apodini/documentation/Apodini/AllAboutReuse":{"role":"collectionGroup","title":"All About Reuse","abstract":[{"type":"text","text":"Despite its declarative nature, Apodiniâ€™s API is really flexible and enables you to build reusable components on many different levels."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/AllAboutReuse","kind":"article","type":"topic","url":"\/documentation\/apodini\/allaboutreuse"},"doc://Apodini/documentation/Apodini/Guard":{"role":"symbol","title":"Guard","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Guard"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Guard"},{"type":"text","text":" can be used to inspect request and guard "},{"type":"codeVoice","code":"Component"},{"type":"text","text":"s using the check method"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Guard","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Guard"}],"url":"\/documentation\/apodini\/guard"},"doc://Apodini/documentation/Apodini/MetadataProviderGuide":{"role":"collectionGroup","title":"Metadata Provider Guide","abstract":[{"type":"text","text":"A guide on how to use the Metadata system from the perspective of a Metadata Provider."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/MetadataProviderGuide","kind":"article","type":"topic","url":"\/documentation\/apodini\/metadataproviderguide"},"doc://Apodini/documentation/Apodini/HandlerDelegation":{"role":"collectionGroup","title":"Delegating Handlers","abstract":[{"type":"text","text":"Defining reusable and assertive "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/HandlerDelegation","kind":"article","type":"topic","url":"\/documentation\/apodini\/handlerdelegation"},"doc://Apodini/documentation/Apodini/ResponseTransformer/Content":{"role":"symbol","title":"Content","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Content"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"}],"abstract":[{"type":"text","text":"The type the "},{"type":"codeVoice","code":"ResponseTransformable"},{"type":"text","text":"  should be transformed to"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/ResponseTransformer\/Content","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/apodini\/responsetransformer\/content"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/documentation/Apodini/Delegate":{"role":"symbol","title":"Delegate","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Delegate"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Delegate"},{"type":"text","text":" is a lazy version of "},{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":". That is, your delegate "},{"type":"codeVoice","code":"D"},{"type":"text","text":" can wrap"},{"type":"text","text":" "},{"type":"text","text":"multiple "},{"type":"codeVoice","code":"Property"},{"type":"text","text":"s and their functionality is maintained. The "},{"type":"codeVoice","code":"Delegate"},{"type":"text","text":" type makes its wrapped"},{"type":"text","text":" "},{"type":"text","text":"instance of "},{"type":"codeVoice","code":"D"},{"type":"text","text":" discoverable to the Apodini runtime framework. Moreover, it delays initialization and verification"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"@Parameter"},{"type":"text","text":"s to the point where you call "},{"type":"codeVoice","code":"Delegate"},{"type":"text","text":" as a function. This enables you to decode"},{"type":"text","text":" "},{"type":"text","text":"input lazily and to do manual error handling in case decoding fails."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Delegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Delegate"}],"url":"\/documentation\/apodini\/delegate"},"doc://Apodini/documentation/Apodini/DelegationModifier":{"role":"symbol","title":"DelegationModifier","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DelegationModifier"}],"abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegationModifier","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DelegationModifier"}],"url":"\/documentation\/apodini\/delegationmodifier"},"doc://Apodini/documentation/Apodini/DelegatingHandlerInitializer":{"role":"symbol","title":"DelegatingHandlerInitializer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DelegatingHandlerInitializer"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"DelegatingHandlerInitializer"},{"type":"text","text":" is used to dynamically stack "},{"type":"strong","inlineContent":[{"type":"text","text":"delegating"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Component"},{"type":"text","text":"s. The "},{"type":"codeVoice","code":"DelegatingHandlerInitializer"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"instance"},{"type":"text","text":" method is called once for"},{"type":"text","text":" "},{"type":"text","text":"every related endpoint."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DelegatingHandlerInitializer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DelegatingHandlerInitializer"}],"url":"\/documentation\/apodini\/delegatinghandlerinitializer"}}}