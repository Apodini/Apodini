{"seeAlsoSections":[{"title":"Maintaining State","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/DynamicProperty"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"title":"State","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:7Apodini5StateV","modules":[{"name":"Apodini"}],"navigatorTitle":[{"kind":"identifier","text":"State"}]},"abstract":[{"type":"text","text":"State can be used to maintain state across multiple evaluations of the same "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":".."},{"type":"text","text":" "},{"type":"text","text":"This is especially helpful for "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s which use "},{"type":"codeVoice","code":"Connection"},{"type":"text","text":" and do not instantly return"},{"type":"text","text":" "},{"type":"codeVoice","code":"Response.final(_)"},{"type":"text","text":"."}],"sections":[],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/State","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/Property"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/StatefulHandlers"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/State\/init()","doc:\/\/Apodini\/documentation\/Apodini\/State\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Apodini\/documentation\/Apodini\/State\/wrappedValue"]}],"variants":[{"paths":["\/documentation\/apodini\/state"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Element"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Note "},{"type":"codeVoice","code":"State"},{"type":"text","text":" has the same scope as the "},{"type":"codeVoice","code":"Connection"},{"type":"text","text":" available via "},{"type":"codeVoice","code":"@Environment(\\.connection)"}]}]}]}]}],"references":{"doc://Apodini/documentation/Apodini/State":{"role":"symbol","title":"State","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"abstract":[{"type":"text","text":"State can be used to maintain state across multiple evaluations of the same "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":".."},{"type":"text","text":" "},{"type":"text","text":"This is especially helpful for "},{"type":"codeVoice","code":"Handler"},{"type":"text","text":"s which use "},{"type":"codeVoice","code":"Connection"},{"type":"text","text":" and do not instantly return"},{"type":"text","text":" "},{"type":"codeVoice","code":"Response.final(_)"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/State","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"State"}],"url":"\/documentation\/apodini\/state"},"doc://Apodini/documentation/Apodini/State/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"}],"abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/State\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/state\/wrappedvalue"},"doc://Apodini/documentation/Apodini/State/init(wrappedValue:)":{"role":"symbol","title":"init(wrappedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Uses the given "},{"type":"codeVoice","code":"Element"},{"type":"text","text":" as the default value."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/State\/init(wrappedValue:)","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/state\/init(wrappedvalue:)"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/documentation/Apodini/Property":{"role":"symbol","title":"Property","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Property"}],"abstract":[{"type":"text","text":"This protocol is implemented by all of Apodini’s property wrappers that are used access functionality or information on a handling "},{"type":"codeVoice","code":"Component"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Property","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Property"}],"url":"\/documentation\/apodini\/property"},"doc://Apodini/documentation/Apodini/State/init()":{"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ExpressibleByNilLiteral"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"A convenience initializer that uses "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" as the initial value."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/State\/init()","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/state\/init()"},"doc://Apodini/documentation/Apodini/StatefulHandlers":{"role":"collectionGroup","title":"Stateful Handlers","abstract":[{"type":"text","text":"Usually endpoints only handle one request and answer with one response. However, in certain cases, this is not enough. Apodini sets no restrictions on this."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/StatefulHandlers","kind":"article","type":"topic","url":"\/documentation\/apodini\/statefulhandlers"},"doc://Apodini/documentation/Apodini/DynamicProperty":{"role":"symbol","title":"DynamicProperty","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"abstract":[{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" allows for wrapping "},{"type":"codeVoice","code":"Property"},{"type":"text","text":"s while maintaining their functionality. By conforming a "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" to "},{"type":"codeVoice","code":"DynamicProperty"},{"type":"text","text":" "},{"type":"text","text":"you make this "},{"type":"codeVoice","code":"struct"},{"type":"text","text":"’s properties discoverable to the Apodini runtime framework. This can be used to e.g. combine"},{"type":"text","text":" "},{"type":"text","text":"two property wrappers provided by the Apodini framework into one that merges their functionality"}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/DynamicProperty","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"url":"\/documentation\/apodini\/dynamicproperty"}}}