{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"accept"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"visitor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/Apodini\/documentation\/Apodini\/SyntaxTreeVisitor","preciseIdentifier":"s:7Apodini17SyntaxTreeVisitorC","text":"SyntaxTreeVisitor"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" that needs to provide a custom "},{"type":"codeVoice","code":"accept"},{"type":"text","text":" implementation "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" conform to "},{"type":"codeVoice","code":"SyntaxTreeVisitable"},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" provide a custom "},{"type":"codeVoice","code":"accept"},{"type":"text","text":" implementation."},{"type":"text","text":" "},{"type":"text","text":"We require that each Component that conforms to "},{"type":"codeVoice","code":"SyntaxTreeVisitable"},{"type":"text","text":" provides its own custom "},{"type":"codeVoice","code":"accept"},{"type":"text","text":" implementation to avoid an endless loop in the "},{"type":"codeVoice","code":"accept"},{"type":"text","text":" function."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/apodini\/text\/accept(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Apodini\/documentation\/Apodini\/Text\/accept(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"As the "},{"type":"codeVoice","code":"SyntaxTreeVisitable"},{"type":"text","text":" protocol is internal we are not able to make "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" conform to the protocol."},{"type":"text","text":" "},{"type":"text","text":"This implementation of "},{"type":"codeVoice","code":"accept"},{"type":"text","text":" provides a default implementation for "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" that either forwards the visitor to a custom "},{"type":"codeVoice","code":"accept"},{"type":"text","text":" implementation provided by conforming to the "},{"type":"codeVoice","code":"SyntaxTreeVisitable"},{"type":"text","text":" "},{"type":"text","text":"or forwards the "},{"type":"codeVoice","code":"SyntaxTreeVisitor"},{"type":"text","text":" to the content of the "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" in case the content is not of type "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"accept(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"accept"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SyntaxTreeVisitor","preciseIdentifier":"s:7Apodini17SyntaxTreeVisitorC"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:7Apodini9ComponentPAAE6acceptyyAA17SyntaxTreeVisitorCF::SYNTHESIZED::s:7Apodini4TextV","extendedModule":"Apodini","modules":[{"name":"Apodini"}]},"hierarchy":{"paths":[["doc:\/\/Apodini\/documentation\/Apodini","doc:\/\/Apodini\/documentation\/Apodini\/Text","doc:\/\/Apodini\/documentation\/Apodini\/Text\/Component-Implementations"]]},"references":{"doc://Apodini/documentation/Apodini/Text/accept(_:)":{"role":"symbol","title":"accept(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"accept"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"SyntaxTreeVisitor","preciseIdentifier":"s:7Apodini17SyntaxTreeVisitorC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"As the "},{"type":"codeVoice","code":"SyntaxTreeVisitable"},{"type":"text","text":" protocol is internal we are not able to make "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" conform to the protocol."},{"type":"text","text":" "},{"type":"text","text":"This implementation of "},{"type":"codeVoice","code":"accept"},{"type":"text","text":" provides a default implementation for "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" that either forwards the visitor to a custom "},{"type":"codeVoice","code":"accept"},{"type":"text","text":" implementation provided by conforming to the "},{"type":"codeVoice","code":"SyntaxTreeVisitable"},{"type":"text","text":" "},{"type":"text","text":"or forwards the "},{"type":"codeVoice","code":"SyntaxTreeVisitor"},{"type":"text","text":" to the content of the "},{"type":"codeVoice","code":"Component"},{"type":"text","text":" in case the content is not of type "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Text\/accept(_:)","kind":"symbol","type":"topic","url":"\/documentation\/apodini\/text\/accept(_:)"},"doc://Apodini/documentation/Apodini/Text":{"role":"symbol","title":"Text","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Text"}],"abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Text","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Text"}],"url":"\/documentation\/apodini\/text"},"doc://Apodini/documentation/Apodini":{"role":"collection","title":"Apodini","abstract":[{"type":"text","text":"A declarative, composable framework to build web services using Swift."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini","kind":"symbol","type":"topic","url":"\/documentation\/apodini"},"doc://Apodini/documentation/Apodini/Text/Component-Implementations":{"role":"collectionGroup","title":"Component Implementations","abstract":[],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/Text\/Component-Implementations","kind":"article","type":"topic","url":"\/documentation\/apodini\/text\/component-implementations"},"doc://Apodini/documentation/Apodini/SyntaxTreeVisitor":{"role":"symbol","title":"SyntaxTreeVisitor","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxTreeVisitor"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyntaxTreeVisitor"},{"type":"text","text":" is used to parse the Apodini DSL and forward the parsed result to the "},{"type":"codeVoice","code":"SemanticModelBuilder"},{"type":"text","text":"s."}],"identifier":"doc:\/\/Apodini\/documentation\/Apodini\/SyntaxTreeVisitor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyntaxTreeVisitor"}],"url":"\/documentation\/apodini\/syntaxtreevisitor"}}}